{
  "docs": [
    {
      "id": 21840414,
      "title": "Eclipse IDE 2019-12 is released",
      "search": [
        "Eclipse IDE 2019-12 is released",
        "Normal",
        "https://www.eclipse.org/eclipseide/2019-12/noteworthy/",
        "Copyright Eclipse Foundation. All Rights Reserved. ",
        "I use Eclipse CDT+GCC+OpenOCD every day for developing firmware for some projects. It's a great IDE and I love it and I have donated to the foundation several times now. For other projects I use VSCode, and what I really miss in Eclipse it's a nice Dark Mode like in VSCode or QTCreator.<p>Eclipse has a dark mode but it leaves some UI elements like scrollbars as <i>system default</i> (at least on Windows, it means dark mode with white/gray scrollbars), and other windows/menu look ugly, for example the <i>watch</i> window is a sort of a table grid that has the internal <i>white</i> lines with dark background. Some other UI elements don't change at all and make them unreadable/unusable (black text over dark background).<p>I know there are plugins to do this. I've tried them all, but there is always something missing.<p>edit: I know I can code on VSCode and switch to Eclipse for debugging, but it brings a lot of bad memories from 20 years ago when you were editing code on i.e. Ultraedit an moved over a different program for debugging because that's what was available for some given ICE probe.",
        "There is a single Eclipse plugin that keeps me married to that IDE: log4e (<a href=\"http://log4e.de\" rel=\"nofollow\">http://log4e.de</a>). It makes it a breeze to add logging statements to your code. One click puts start/end statements on all methods. One click lets you log a particular variable. And all the statements are templatized, making it dead simple to ensure your logging adheres to your company's logging standards. I WISH this plugin (or something comparable) was available for IntelliJ or even NetBeans. I'd drop Eclipse in a heartbeat."
      ],
      "relevant": "true"
    },
    {
      "id": 20351953,
      "title": "During a Solar Eclipse, What Are Plants Doing?",
      "search": [
        "During a Solar Eclipse, What Are Plants Doing?",
        "Normal",
        "https://www.nytimes.com/2019/07/02/science/plants-solar-eclipse.html",
        "TrilobitesResearch conducted during the Great American Eclipse of 2017 suggested the suns midday disappearance shocked some plants.Credit...Dr. Mario BretfeldJuly 2, 2019As the total solar eclipse crosses South America on Tuesday, it wont just be people oohing and ahhing as the sun is blotted out.Other living things will have their own responses, too some of which we are just beginning to understand. As some scientists used the Great American Eclipse in August 2017 to watch how bees and birds dealt with sudden midday darkness, researchers in Wyoming investigated big sagebrush, a shaggy, aromatic desert shrub that grows throughout the western United States.Tracking its reactions at the leaf level, scientists saw it experience a slowdown in activity as darkness fell, followed by shock at the suns surprise return. The study, published in June in Scientific Reports, adds to a small clump of botanical eclipse research, all produced by people with the ability to wonder, even as a celestial event occurs: What are the plants getting up to?[Like the Science Times page on Facebook. | Sign up for the Science Times newsletter.]Plants havent really been well-documented during the eclipse, said Daniel Beverly, a Ph.D. student in botany and hydrology at the University of Wyoming and the papers lead author. When he heard an eclipse was coming, he saw the chance for a once-in-a-lifetime data set.Big sagebrush spends much of its life in the sun, and it covers such a large portion of the country, from Oregon down to New Mexico, Mr. Beverly said, making it a good subject for study. He and his colleagues chose a patch close to Yellowstone National Park. They set up instruments that could measure photosynthetic rate, as well as the speed of transpiration how quickly its leaves lose water.As the light faded and the temperature dropped during the 80 or so minutes before totality, Mr. Beverly and his team saw a corresponding decrease in photosynthesis and transpiration. The plant responded as if it was dusk, he said.During the two minutes and 18 seconds of complete darkness, both rates fell further. Although they did not quite reach the slowdown level of an average nighttime, it was a much more precipitous drop than would have occurred for a passing cloud.But when the sun appeared again, the shrubs were blindsided.Thats when we saw the most evident signals of stress, said Mr. Beverly. It caused a disruption in the photosynthetic pathways.Although they could not test this directly, he guesses that the shock of sudden sunlight messed with each plants circadian rhythm the internal clock that determines an organisms daily cycle of activity.Over the course of the eclipse day, the team estimated, your average big sagebrush managed about 14 percent less photosynthesis than it would have if the sun hadnt been blocked. If a plant is already drought-stressed, an eclipse might be bad news, like losing 14 percent of a days income when youre already broke, Mr. Beverly said.Their findings follow a few other studies, including one done during an eclipse over Europe in 1999 that showed changes in sap flow and transpiration in a beech tree near Ghent, Belgium. The tree held its breath during the solar eclipse, said Kathy Steppe, now a professor of plant ecology at Ghent University meaning it stopped releasing water, even as its sap kept flowing.Mr. Beverly looks forward to the 2024 eclipse, which will sweep from Mexico through to the Eastern United States, when he plans to take a closer look at crop and tree responses.Hell do one thing differently: I would try to use as much automation as possible so I could actually enjoy the eclipse, he said. Thats a big thing I missed. ",
        "Is there a difference between eclipse and bringing tour plant inside? How is it difficult to simulate a eclipse all year round ?",
        "Some data my company collected during the August 2017 eclipse in Nebraska - <a href=\"http://www.licor.com/env/newsline/2017/08/solar-eclipse-data-from-li-cor/\" rel=\"nofollow\">http://www.licor.com/env/newsline/2017/08/solar-eclipse-data...</a>"
      ],
      "relevant": "false"
    },
    {
      "id": 20602318,
      "title": "My experience using Spring boot for website development",
      "search": [
        "My experience using Spring boot for website development",
        "At work, I was asked to learn spring boot and the first task was to build a simple crud app, just end to end functionality for a model with automated tests, builds, static code analysis etc. I hate to admit it, but for the first few days (and even now) I couldn't tell which was up and which way was down, nothing made sense.<p>- Installation was a nightmare. Workplace uses windows, so the usual dance of installing the jdk, setting the env variables, creating a project in eclipse and for some reason it uses the jre instead of the jdk. Some plugins/packages such as lombok work in eclipse but not in vs code! And even in eclipse there's some annotation (@Data I think) that's supposed to generate getters and setters but it doesn't work.<p>- Flexible architecture : some use service, serviceimpl and controllers. Some skip the service interface. And it turns out you can extend crudrepository and have a fully functioning rest endpoint without writing any code using spring data rest!<p>- Magic : this is incredibly frustrating. Some repository types are automatically exported, some are not and the docs do an atrocious job of explaing what's going on. Place some file abc.xyz in the root and magic happens!<p>- Docs : the single worst part of learning spring boot, especially for newcomers. How can the docs possibly be so insensitive to newcomers? Or do they expect only experienced devs at big cos to use spring boot?<p>- I hate to admit this, but I still don't know what a god damn bean is, what AOP is, what inversion of control is.<p>This was mainly a rant and a bad one at that, but I had to vent.",
        "AskHN",
        "I would say that you were likely more successful than the typical first time exposure using Sprint Boot.<p>Your comments also sound spot-on to much of my first time exposure to Spring (pre Boot). I've used Spring and Spring Boot on many projects since and it wouldn't be my first choice. It tends to be selected for its popularity which means there are StackOverflow answers, pretty good support for common use cases, and a large pool to hire from.<p>At the same time, Spring Boot (or even just Spring) aren't the worst once you get used to them. I myself have come to dislike other aspects of it (e.g. slow startup, JPQL and Hibernate quirks, excessive gc, poor scaling). Most of these things probably won't have much of an impact until the application gets to a certain level of complexity or scale. But if it wasn't about solving for the future, Ruby or Python would be better to start.",
        "I've been programming in Java since I started working as a programmer. Learning to setup a Windows machine for Java development is difficult if you aren't familiar with environment variables and the like.<p>Java, like C++, has gotten more and more features/keywords over the years. Frameworks like Spring Boot tend to make use of those features. Also, Spring Boot is a sit down and read the guides compared to something like Rails or ExpressJS and the like. Depending on your Java knowledge the documentation is going to be hit or miss I think. Also, convention over configuration makes it harder for new developers to get the hang of developing with a framework like Spring Boot because they don't know the conventions usually."
      ],
      "relevant": "true"
    },
    {
      "id": 20161460,
      "title": "Fortnite Eclipses Facebook, Instagram as Tweens' Preferred Social Platform",
      "search": [
        "Fortnite Eclipses Facebook, Instagram as Tweens' Preferred Social Platform",
        "Normal",
        "https://www.hollywoodreporter.com/news/fortnite-eclipses-facebook-instagram-as-tweens-preferred-social-platform-1217335",
        "Fortnite isnt just a game its also social media. So says a study from National Research Group, which provides a telling snapshot of the new attention economy. Fortnite players spend more of their free time logging into the battle royale game than they do scrolling through Facebook and Instagram or streaming on Netflix and YouTube. In the two years since its July 2017 launch, Fortnite has grown into a global phenomenon with more than 250 million active players (82 percent under age 35) and $2.4 billion in annual revenue. Netflix CEO Reed Hastings was on to something when he noted in January that the streamer competes (and loses) more with Fortnite than with HBO. According to NRG, Fortnite players spend 21 percent of their free time with the game. The reason? Per Tim Sweeney, CEO of Fortnite developer Epic Games, the title was designed to be a social experience. Not only does Fortnite encourage players to hone their skills in competitive matches, but it also offers activities for people who just want to hang out in its virtual world. In February, for instance, the EDM DJ Marshmello hosted an in-game concert that drew 10 million viewers. The competition for free time is finite, says NRG CEO Jon Penn. To have an event that draws that many people, in any capacity, makes the threat of Fortnite being a platform very real. NRG indicates that users are responding to the games social elements. Researchers write that it makes people feel good while also providing a worthwhile experience and social connection. And more social elements could be coming, Sweeney hinted during a March interview with THR. Just like anybody could create a Facebook page, anybody should be able to express themselves in Fortnite in a huge variety of ways, he said. While the majority of Fortnite users are young, its the tween demographic that is spending more time in the game in 2019. NRG reports that 53 percent of survey respondents ages 10 to 12 play Fortnite weekly, significantly more than those who said they use Facebook and Instagram regularly. Facebook limits usage to 13 years old and up, so most kids dont have any idea why theyd want to be on it anyway, says Wedbush analyst Michael Pachter, adding, Fortnite is 100 percent a social platform. This story first appears in the June 12 issue of The Hollywood Reporter magazine. To receive the magazine, click here to subscribe. THR Newsletters Sign up for THR news straight to your inbox every day Subscribe Sign Up ",
        "Interesting, I'm not well versed in Fortnite but could they be a threat to Facebook by doing some slight pivot technology wise?",
        "Mostly sensationalism. What the hells a \"social platform\" anyway?<p>Fortnite is free and accessible (pc, mobile, console). It's a popular game, but like all games, the attention will eventually fade and players will move on. The user base will get older and have different tastes."
      ],
      "relevant": "false"
    },
    {
      "id": 20759879,
      "title": "Ask HN: Recommendations for full-blown polyglot web IDEs",
      "search": [
        "Ask HN: Recommendations for full-blown polyglot web IDEs",
        "I'm looking for full-blown web IDE solutions, with the following features:<p>1) Polyglot: Support for multiple programming languages and preferably web frameworks (using project templates, base container images, etc.), build and test tools<p>2) Embedded Shell: CLI shell to interact with the execution environment<p>Some options I'm aware of include:<p>1) Eclipse Che on OpenShift (https://che.openshift.io)<p>2) Repl.it (https://repl.it) - This isn't a full-blown IDE though",
        "AskHN",
        "JetBrains\n<a href=\"https://www.jetbrains.com\" rel=\"nofollow\">https://www.jetbrains.com</a>",
        "You can self-host the pre-AWS Cloud9 IDE on a VPS: <a href=\"https://hub.docker.com/r/sapk/cloud9/\" rel=\"nofollow\">https://hub.docker.com/r/sapk/cloud9/</a>"
      ],
      "relevant": "true"
    },
    {
      "id": 18972516,
      "title": "A meteorite hit the moon during yesterday's total lunar eclipse",
      "search": [
        "A meteorite hit the moon during yesterday's total lunar eclipse",
        "Normal",
        "https://www.newscientist.com/article/2191526-a-meteorite-hit-the-moon-during-yesterdays-total-lunar-eclipse/",
        "The meteorite impact caused a bright flash, indicated by the arrowJose M. Madiedo Observers of Mondays lunar eclipse were blessed with the first known sighting of a meteorite impact during such an event. The so-called super wolf blood moon was eagerly watched by millions of people around the world, mostly via live streaming video.During the eclipse,some people noticed a tiny flash, a brief yellow-white speck, popping up on the lunar surface during the online broadcasts. One Reddit user raised the possibility that this was a meteorite impactand othersscoured eclipse footage for evidence of the event. A flash is visible in at least three different videos.Advertisement Jose Maria Madiedo at the University of Huelva in Spain has confirmed that the impact is genuine.For years,he and his colleagues have been hoping to observe a meteorite impact on the moon during a lunar eclipse, but the brightness of these events can make that very difficult lunar meteorite impacts have been filmed before, but not during an eclipse. Read more: NASA puzzles over invisible moon impact On this occasion, Madiedo doubled the number of telescopes trained on different parts of the moon from four to eight in the hope of seeing an impact. I had a feeling, this time will be the time it will happen, says Madiedo. After the eclipse, software automatically pinpointed a flash in imagery recorded by several of his telescopes. This helps to confirm that the flashes seen by live stream-watchers were not just optical anomalies on camera sensors. I was really, really happy when this happened, says Madiedo. He notes that the flash was quite bright and it struck the moon at a moment when the eclipse was not overly luminous itself, perhaps making the strike easier to detect. Although he has not yet formally calculated an estimate for the size of the space rock that collided with the moon, Madiedo thinks it probably had a mass of about 2 kilograms and was roughly the size of a football. Experience Argentinas 2020 total solar eclipse: Witness a rare celestial event on a New Scientist Discovery Tour The combination of a darkened surface and a lot of people watching made it much more likely that the flash of impact was seen and it reminds us that the solar system is still a very dynamic place, says Robert Massey at the Royal Astronomical Society. Article amended on 23 January 2019 When this article was first published it included a video of a collision recorded in December 2018. It has been replaced with the correct video showing the January meteorite impact during the lunar eclipse. Article amended on 6 February 2019 We corrected the measure of the mass of the meteorite More on these topics: the moon eclipses ",
        "Scott Manley did a great quick video about this<p><a href=\"https://www.youtube.com/watch?v=Smp7TqccTpY\" rel=\"nofollow\">https://www.youtube.com/watch?v=Smp7TqccTpY</a>",
        "I know its just a coincidence that the meteor hit during a lunar eclipse while millions of people might have been watching (and probably not seeing it). But, it gives me chills to think that lump of rock has been orbiting through the solar system for possibly billions of years with its unknown fate already sealed. All it took was for the Sun and all the planets and moons to go through their cycles an uncountable number of times to bring it to its ultimate conclusion.<p>Now, unknown asteroid, your watch is done."
      ],
      "relevant": "false"
    },
    {
      "id": 20447378,
      "title": "Lunar Eclipse: An Email to a Daughter and Son-in-Law",
      "search": [
        "Lunar Eclipse: An Email to a Daughter and Son-in-Law",
        "Normal",
        "https://groups.google.com/d/msg/b-a-s/9rcz9MbC5p8/2Q8txQgGBAAJ",
        "Vasanth BRunread,Jul 15, 2019, 11:50:39 PM7/15/19to TS...@yahoogroups.com, subramanya cr, absb...@googlegroups.com, b-...@googlegroups.com, Shyamal Sarkar, ind...@googlegroups.com, Military...@yahoogroups.com, ma...@randhirmishra.com, s_chowdh...@yahoo.com, Swaga...@gmail.com, vas...@learningaccord.com AN EMAIL TO A DAUGHTER & SON-IN-LAW. Tue, 16 Jul 19 / 01:32 Dear Shirin & Arun, Place Flight M British Standard Time Indian Standard Time Duration Distance A/C Speed Alt London BA 119 D Tue, 16 Jul / 14:25 (+01:00) Tue, 16 Jul / 18:55 (+05:30) B 777 Bengaluru A Wed, 17 Jul / 00:05 (+01:00) Wed, 17 Jul / 04:35 (+05:30) 09:40 hr 8,010 km 869 km/h 11,280 mt On Wed, 17 Jul, a Partial Lunar Eclipse begins at (all IST) 01:31:43, reaches Maximum 65% at 03:00:44 and Ends at 04:29:39. You will be landing in Bengaluru, at 04:35; just 5 minutes after the Eclipse ends. Solar Eclipses are Virtual. They really do not exist. They are Localised OUR Views of the sun, from an individual on the earth. They are no different from holding an umbrella over your head, when walking under the sun. Instead of the umbrella, you are \"holding\"the moon over your head, blocking the sun, only to you, locally; only about 30 km around you. It is about 30 km radius circle, because your umbrella is about 1 mt diametre and the moon's diametre is 3,476 km; but then, it is 362,600 km to 405,600 km away. Lunar Eclipses are real. They are actually happening of an event on the moon. The earth's shadow, is actually falling on the moon. All the persons in half earth who can see the moon, can see the Eclipse, in the same manner. When you take off from London, set your watch 04 hr 30 mt head. In that watch, when it isIndia's time, 01:31:43 (correct to the second), the Eclipse begins. You can calibrate your watch, correct to the second. Please try to get a seat on the right side, so that you can get a view on the West side. Do not sit over the wing. When the Eclipse starts at 01:32, you will be over Oman (wave to Arun's sister Anita). From Oman to Bengaluru, you willfly due South-East. You do not have to crane your neck. See the moon at level, straight through your window. This is a rare opportunity, to see the entire Lunar Eclipse of 02 hr 57 mt 56 sc through the window of a plane. Take your BEST binoculars with you. If you do not have one, purchase it in Belfast or London. At 11.28 km high, above the atmosphere, your moon sight will be in crystal clear sky. As the Earth's sharply edged shadow races across the moon's surface, at about 1,000 km per hour, through your binoculars, you will see the edge of the shadow climbing up the moon's mountains and dipping below into the valleys. From the Earth's surface, the moon appears flat. In reality, the centre of the moon is 1,738 km nearer to you. From a plane, at 11 km above the Earth's surface, as the Earth's shadow's edge races across the moon's surface, your eyes will suddenly see the moon in 3 dimensions. Just intently stare at the moon. Your brain will suddenly pop up the moon into 3 dimensions. This is a million pounds worth ofexperience, which you can NEVER have fromthe Earth's surface. Looking forward to meeting you. DAD BHU1 LORDunread,Jul 16, 2019, 7:09:25 AM7/16/19to b-...@googlegroups.comNo offence but why is this on a public mailing list keerthi kiranunread,Jul 16, 2019, 7:38:52 AM7/16/19to BASHi Vasanth,Nice to see your mail after a long time :)It was a nice read... I wish I was on that flight :)I saw one error in your mail. The eclipse will happen in the eastern sky. So they should get a view on the \"East side of the plane\".Also, they can inform the crew so that the crew informs the other passengers. All the best to them. Hope they get to witness a wonderful eclipse (and may be take a photo from the cockpit).Thanks and Regards,Keerthi -- You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group. keerthi kiranunread,Jul 16, 2019, 7:51:22 AM7/16/19to BASHi Bhu1 Lord,The mail (although written in a personal context) is informational. Also, it is a good read :)Regards,Keerthi -- You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group. Message has been deletedSusam Palunread,Jul 16, 2019, 8:15:54 AM7/16/19to Bangalore Astronomical SocietyThe eclipse would begin at 01:32 AM IST, i.e., 00:02 AM GST at Oman when the plane is likely flying over Oman. In Muscat (Oman), the moon would rise at 06:39 PM GST in the East-southeast, cross the local meridian at 12:09 AM GST, and set at 05:40 AM GST in the West-southwest [1]. Therefore, when the eclipse would start at 00:02 AM GST, the moon would be in the eastern sky close to the local meridian at Muscat.But then most of the remaining eclipse seems to take place in the western sky. For example, in Bangalore, the moon would rise at 06:30 PM IST in the East-southeast, cross the local meridian at 12:20 AM IST, and set at 06:10 AM IST in the West-southwest [2]. Therefore, when the eclipse would end at 04:29 AM IST, the moon would be in the western sky ready to set in about 1.5 hours. It looks like most of the eclipse would indeed be visible in the western sky from this particular flight.[1]: https://www.timeanddate.com/moon/oman/muscat[2]: https://www.timeanddate.com/moon/india/bangaloreThanks,Susam -- You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group.Shashikiran Kolarunread,Jul 16, 2019, 2:50:55 PM7/16/19to Bangalore Astronomical SocietyYes, as Susam says, with respect to Muscat and India, the Moon spends most of its time in the Western half of the sky when it enters the Earth's umbral shadow.Muscat is 22, or about 90 minutes, West of Bangalore. So, if the partial eclipse begins at 1.30AM here, it would do so at 12.00AM at Muscat. Since this is the full moon, it's in opposition and hence transits to Western part of the sky at (local) 12.00AM. Also, the plane would be flying Eastwards, causing the Moon would always hang in the Western part of the sky thereon.That lunar eclipses always begin at the Eastern limb of the Moon was perhaps confused with the Moon being in the Eastern half of the sky?As an aside, it is likely that certain depictions on temples indicate eclipses. In the attached picture, a snake is seen moving towards a moon (shown as a crescentto perhaps distinguish it from the Sun) and likely indicates Rahu/Ketu about to swallow the Moon causing a lunar eclipse. The temple may have been dedicated during such an event.Thanks,-ShashiRameshwara temple, Hale Palya, Hassan District, Karnataka.JPGBHU1 LORDunread,Jul 16, 2019, 2:56:15 PM7/16/19to b-...@googlegroups.comI guess I misunderstood the mail when I first read it as it was written in personal context and thought it was meant to be sent to somebody personallyBut I really appreciate the result especially regarding the accurate timings mentioned in the mailI'm eagerly waiting for the eclipse and wish all of you clear skieskeerthi kiranunread,Jul 17, 2019, 10:08:39 AM7/17/19to BASHi Susam, Shashikiran,You guys are right. I didn't think it through.For Europe, the eclipse was already underway when the moon rose. So I was only thinking about that.But for Asia, as you guys said, the eclipse was mostly in the western sky.Regards,Keerthi You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group. BHU1 LORDunread,Jul 17, 2019, 10:11:43 AM7/17/19to b-...@googlegroups.comDid anybody get some good pictures of the eclipseHere the clouds started moving SW during max eclipse and the moon was completely coveredI would really appreciate if somebody got a pic of the moon during max eclipsekeerthi kiranunread,Jul 17, 2019, 10:15:24 AM7/17/19to b-...@googlegroups.comI can't call them good photos. But I got a few from Paris from my balcony.Regards,Keerthi You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group. 20190717030019__MG_1631.JPG.jpgBHU1 LORDunread,Jul 17, 2019, 10:20:27 AM7/17/19to b-...@googlegroups.comthe pictures are awesomeI really wished I had that crystal clear sky hereAjay Talwarunread,Jul 17, 2019, 10:50:55 AM7/17/19to b-...@googlegroups.comHi Bhuvan,Here is an image of last night's eclipse. This image of the Lunar eclipse was shot at 02:52 AM (I.S.T.) on 17 July, using the 14inch telescope and Hyperstar lens. Location - Tijara, Rajasthan.This image is a HDR composite of 5 images, clicked in quick succession, and varying exposures. The longer exposure was good for the darker portion of the eclipse, and the shorter exposure was good for the brighter part of the Moon, which was not inside the umbra. The 5 images were combined to show the brighter as well as the darker portions of this partial lunar eclipse together in an HDR image. Monsoon clouds can be seen all around the eclipsed moon.Ajay Talwar -- You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group. -- You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group. -- You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group. -- You received this message because you are subscribed to the Google Groups \"Bangalore Astronomical Society\" group.2019-07-17 Partial Lunar Eclipse Hyperstar HDR.jpgBHU1 LORDunread,Jul 17, 2019, 11:05:55 AM7/17/19to b-...@googlegroups.comThis picture is worth all the effort you put into itI like how to incorporated the clouds into the picture, it gives kind of a mysterious feel to itkeerthi kiranunread,Jul 17, 2019, 12:58:22 PM7/17/19to b-...@googlegroups.comHere are some good photos clicked by Prabhu Kutti, Naveen and Niranjan from our WhatsApp group.Regards,Keerthikeerthi kiranunread,Jul 17, 2019, 12:59:50 PM7/17/19to b-...@googlegroups.comAwesome image Ajay :)But don't share it with TV channels, they will use it will special effects to scare people... :D Huligun .comunread,Jul 17, 2019, 6:46:28 PM7/17/19to b-...@googlegroups.comGood photos all, thanks for sharing !!! Akarsh Simhaunread,Jul 18, 2019, 8:14:52 AM7/18/19to b-...@googlegroups.comYes, very nice to hear from Vasanth after a long long time!ashiqunread,Jul 18, 2019, 2:16:32 PM7/18/19to b-...@googlegroups.com ",
        "> Solar Eclipses are Virtual. They really do not exist. [..] Lunar Eclipses are real. They are actually happening of an event on the moon.<p>During a lunar eclipse, the earth projects its shadow on the moon. During a Solar Eclipse, the moon projects its shadow on the earth. Only the shadow is smaller. I'm not sure what makes lunar eclipses more real.",
        "In May, my three year old daughter and I flew out to Vancouver Island, Canada to spend a couple of weeks with my Dad. It was my daughter’s second time out to the island, though the first time was for my Grandma’s funeral when she was six months old.<p>This email from a father to a child reminds me of the emails my Dad sent us in the lead up to our trip. I’ve never seen my Dad so excited for anything. The day of the flight, he was awake at 1am his local time to start watching the flight schedule and the weather. He wrote lots of reminders, to make sure that I packed Lauren’s identification, Pull Ups and wipes. And he wanted to make sure that Lauren had a window seat where she wouldn’t just stare out at a wing. No no no, his only granddaughter was going to have a view. (Strangely, the day of the flight was cloudy as hell until we got to the mountains, then we flew over the Rockies with barely a cloud in sight. It was as if Grandpa put in his order for weather that would give his granddaughter the best view imaginable).<p>I was pretty scared in the lead up. I hate flying at the best of times and this was my first solo flight with a three year old. Shit, I’m hardly qualified to deal with Webpack when it has a tantrum. This is a bloody human life in a plane.<p>The flight was amazing and reading my Dad’s dispatches every ten minutes added to our excitement. When we landed, my Dad and stepmother were visibly excited. My daughter ran to them and the three of them had a wonderful moment.<p>My Dad’s emails were purely about his excitement. And this dad’s email makes him sound just as excited as my Dad was. I am only going to have one child and I pray that one day, I get to be that excited about my little girl hopping on a flight to visit me. If my excited message happens to go public and it contains some factual issues, I hope to hell that the people who read it recognize it for what it is...I’ll just be a really excited dad who is doing whatever I can to pass the time before I get to see someone I love more than life! :)"
      ],
      "relevant": "false"
    },
    {
      "id": 20719489,
      "title": "German Ham Radio Operator Takes Picture of Solar Eclipse From the Moon",
      "search": [
        "German Ham Radio Operator Takes Picture of Solar Eclipse From the Moon",
        "Normal",
        "https://www.spiegel.de/wissenschaft/weltall/sonnenfinsternis-vom-mond-aus-fotografiert-hobbyfunker-gelingt-spektakulaeres-bild-a-1282377.html",
        "Himmelsspektakel Deutscher Amateurfunker fotografiert Sonnenfinsternis - vom Mond aus Die Sonnenfinsternis Anfang Juli war in Deutschland nicht zu sehen. Einem Funker aus Schleswig-Holstein gelang trotzdem eine spektakulre Aufnahme - mit Hilfe eines chinesischen Satelliten. 16.08.2019, 18.13 Uhr E-Mail Messenger WhatsApp Link kopieren Reinhard Khn lud die Aufnahme von einem chinesischen Satelliten runter Foto: Harbin Institute of Techology/ CAMRAS/ DK5LA/ DPA Reinhard Khn lebt im schleswig-holsteinischen Srup, er ist 70 Jahre alt, arbeitete als Banker, und in seinem Garten steht eine riesige Antenne - mehr als 13 Meter hoch, zehn Meter breit, selbst gebaut. Wozu er die braucht? Khn ist leidenschaftlicher Amateurfunker. Mit seiner Anlage ist ihm ein besonderer Clou geglckt: Er hat die Sonnenfinsternis Anfang Juli vom Mond aus fotografiert, wie die \"Bild\"-Zeitung berichtet. Das Foto zeigt im Vordergrund die von Kratern zerklftete Rckseite des Mondes und im Hintergrund die Erde mit einem schwarzen Fleck links oben - die Sonnenfinsternis ber dem Pazifik bei Chile. Foto: Cristobal Escobar/Agencia Uno/dpa Wie Khn die spektakulre Aufnahme gelungen ist? Er ist technisch so gut ausgestattet, dass er offiziell mit China bei Raumfahrtprogrammen zusammenarbeitet. \"Die haben festgestellt, dass sie jemanden brauchen, wenn in China der Mond nicht mehr sichtbar ist\", sagt Khn. Das Problem: Weil sich die Erde dreht, verliert China immer wieder zeitweise den Funkkontakt zu Satelliten. Funkstationen in anderen Teilen der Erde wie die von Khn bernehmen dann kurzzeitig die Steuerung. Khn hatte in dieser Funktion auch bei der Landung der chinesischen Sonde \"Chang'e 4\" auf der Rckseite des Mondes geholfen. Khn bekam aus China regelmig digitale Datenbanken mit Befehlen, ber die er den chinesischen Satelliten \"Longjiang 2\" steuern konnte. Der Satellit hatte die Sonnenfinsternis am 2. Juli aufgenommen, den Befehl zum Download des Bildes hatte Amateurfunker Khn den Kommandos der Chinesen beigefgt. Satellit inzwischen zerschellt Das Foto wurde dann ber das Dwingeloo-Radioteleskop in den Niederlanden und von chinesischen Stationen empfangen. Tammo Jan Dijkema von der Camras-Stiftung, die das Dwingeloo-Radioteleskop betreibt, besttigte den Download. Er habe das Teleskop bedient, als das Foto vom Satelliten heruntergeladen wurde. Die Rechte an dem Bild hat sich Khn verdient - mit seinem Rufzeichen DK5LA steht er darunter. Inzwischen macht der Satellit \"Longjiang 2\" keine Bilder mehr. Er ist geplant auf der Oberflche des Mondes zerschellt, um Weltraumschrott zu vermeiden. ",
        "Spookily good translation of the article (which is interesting in its own right):<p><a href=\"https://translate.google.com/translate?sl=de&tl=en&u=https%3A%2F%2Fwww.spiegel.de%2Fwissenschaft%2Fweltall%2Fsonnenfinsternis-vom-mond-aus-fotografiert-hobbyfunker-gelingt-spektakulaeres-bild-a-1282377.html\" rel=\"nofollow\">https://translate.google.com/translate?sl=de&tl=en&u=https%3...</a>",
        "The translation says he's licensed to operate the Chinese satellite. Is that right? Did he have to get approval to issue the command or was this him on his own? Quite a nice picture for a satellite that is now defunct. Was the Chinese satellite's mission already done or did it fail prematurely?"
      ],
      "relevant": "false"
    },
    {
      "id": 21202341,
      "title": "The KeY Project",
      "search": [
        "The KeY Project",
        "Normal",
        "https://www.key-project.org/",
        "Skip to content The KeY to Software Correctness Decades of experience in proving program correctness for Java. Download now Available now: The KeY Book The definitive resource about the KeY system. Tell me more! Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 40 at java.util.TimSort.pushRun(TimSort.java:413) at java.util.TimSort.sort(TimSort.java:240) at java.util.Arrays.sort(Arrays.java:1438) at TestTimSort.main(TestTimSort.java:18) The TimSort Success Story Read about how KeY was used to find a well-concealed bug in the Java standard library. Read the blog post Teaching material available! There is a variety of courses around KeY. Have a look Previous Next Functional Verification Tired of experiencing bugs that weren't covered by your test cases before? KeY lets you augment your Java program with a specification written in the Java Modeling Language JML and helps you proving that your program behaves as it should. View details Symbolic Debugging Debugging sucks! Well, not if you're using our Symbolic Execution Debugger. Profit from a graphical visualization of the program's execution flow, state inspection and various other features to quickly uncover undesired behavior! View details Teaching and Research KeY is already used extensively for teaching at different universities. Use the tool's possibilities for teaching your students important concepts like design by contract, applied logics and program verification. Or use KeY for realizing your research project. View details Most Recent Posts The KeYNote series is a virtual workshop where teams from Germany, the Netherlands, Norway and Sweden (in lexicographic order) take part and present recent work which uses or extends the KeY verification system. Continue reading KeYNote Series Just in time for the holiday season, the new book has arrived. The LNCS volume 12345* Deductive Software Verification: Future Perspectives contains a collection of articles reflections on the occasion of 20 years of KeY. Continue reading The new book has arrived! This is a short comparison report about a verification task solved with KeY, Why3, Dafny and Frama-C. The original challenge comes from a real-world situation. There is no particular trick needed for the specification and verification; it is rather straightforward. Yet, the required annotations to achieve the specification are not too few making the example a good opportunity to compare different specification languages. Continue reading Proving Line Wrapping in KeY, Why3, Dafny and Frama-C During the VerifyThis competition 2021, KeY was invited to present itself as a Java verification tool. It is customary for Verify This that for one tool after a brief introduction into the concepts of the tool, the participants are invited to solve a micro challenge with a little help from present KeY developers. Continue reading KeY Tutorial at VerifyThis 2021 After almost 2 years of active development, we present now KeY 2.8 just before the years end. The new KeY version comes with significant improvements on the calculus side, but features also a major overhaul of the user interface. You can try it out here We thank all contributors for reaching this milestone. Nice holidays and a happy new year!The KeY Team Functional Verification We can do better than testing! KeY lets you specify the desired behavior of your program in the well-known specification language JML, and helps you proving that your programs conforms to its specification. That way, you did not only show that your program behaves as expected for some set of test values - you proved that it works correctly for all possible values! Go beyond testing - start proving! Symbolic Debugging The next-generation debugger. Imagine that you start debugging without having to think of particular input values. Your debugger instantly tells you that part of your code is unreachable, shows you all feasible runs in a beautiful graph and gives you graphical hints on where the problem you're after could possibly hide. While performing all this magic, it gracefully integrates within the Eclipse IDE and offers tools (breakpoints etc.) that you know from the debuggers of yesterday. Meet the Symbolic Execution Debugger! Teaching & Research It was never easier to fall in love with formal methods. Use our tool to demonstrate to your students that formal concepts, like first-order logic, Hoare logic and symbolic execution, are not just dry theoretical ideas, but are practically used and even integrated into the IDE they know. KeY is already extensively used in different universities, in several countries. Currently, our team is spending a lot of effort on making KeY even more attractive to new research projects by increasing its extensibility. Use KeY for your own research project or in your courses! ",
        "Looks interesting, surprised to see it runs on Eclipse. I had to try Eclipse again for Garmin after years of not using it. Man Eclipse is buggier and less useful than I remembered it being. I love IntelliJ and can't replace it, my only exception would be Neovim (which I'm still waiting on JetBrains to allow embedding) or VS Code.",
        "Anybody used it? I attended the lecture \"introduction to formal methods\" by one of the profs behing the project at KIT. It was a fantastic lecture and the prof was very good, but the scriptum was 600 pages long just for a few ECTS. I always wondered whether this project has industrial use somewhere or not."
      ],
      "relevant": "true"
    },
    {
      "id": 19623087,
      "title": "Event Horizon Telescope Live Press Conference",
      "search": [
        "Event Horizon Telescope Live Press Conference",
        "Normal",
        "https://www.eso.org/public/live/",
        "On 2 July 2019 the European Southern Observatory (ESO) provided a 4-hour live webcast of the 2019 La Silla Total Solar Eclipse. This was a unique opportunity to be part of the only total solar eclipse visible from an ESO Observatory for the next 212 years. The webcast was a raw feed without commentary switching between sources regularly, featuring views from three small telescopes and two camera views of spectators at the Observatory. The webcast finishes with a beautiful view of the Sun setting over the Pacific Ocean. A nice way to end a spectacular day at La Silla. Production: Francois Glasser (APICAL) Engineering: Lionel Gauze (APICAL) & Francois Glasser (APICAL) Cinematography: Francois Glasser (APICAL) & Alexandre Santerne (Aix-Marseille University/LAM) Director: Lars Lindberg Christensen The Eclipse Schedule Event02.07.2019 Local Time Chile CLT Time UT Time CEST Start of webcast 13:56:00 17:56:00 19:56:00 Start of partial eclipse (C1) 15:23:51 19:23:51 21:23:51 Start of total eclipse (C2) 16:39:24 20:39:24 22:39:24 Maximum eclipse 16:40:20 20:40:20 22:40:20 End of total eclipse (C3) 16:41:15 20:41:15 22:41:15 End of partial eclipse (C4) 17:47:16 21:47:16 23:47:16 Sunset 17:54:00 21:54:00 23:54:00 End of webcast 18:12:00 22:12:00 00:12:00 Duration, totality 01:51.7 ",
        "I had a brief conversation about this and the Falcon Heavy launch with my quantum professor, who is very deep into black holes. I completely understand why they're very excited about this announcement, and I am pumped as well. But they should be a bit excited for the falcon heavy launch as well, if we had a radio telescope on the far side of the moon with a decent clock the resolution on this announcement would an order of magnitude better. That kind of project will be more feasible as launches get cheaper.\nedit: The radio telescope on the moon's data would be integrated into the rest of the networks, this would permit a virtual aperture diameter about ~50 times larger.",
        "The papers with the scientific details are here (open access):<p><a href=\"https://iopscience.iop.org/journal/2041-8205/page/Focus_on_EHT\" rel=\"nofollow\">https://iopscience.iop.org/journal/2041-8205/page/Focus_on_E...</a><p>Article in physics world with comparisons to simulations:<p><a href=\"https://physicsworld.com/a/first-images-of-a-black-hole-unveiled-by-astronomers-in-landmark-discovery/\" rel=\"nofollow\">https://physicsworld.com/a/first-images-of-a-black-hole-unve...</a><p>\"AskScience\" AMA on Reddit about the breakthrough:<p><a href=\"https://www.reddit.com/r/askscience/comments/bbknik/askscience_ama_series_we_are_scientists_here_to/\" rel=\"nofollow\">https://www.reddit.com/r/askscience/comments/bbknik/askscien...</a>"
      ],
      "relevant": "false"
    },
    {
      "id": 19825059,
      "title": "Negotiations Failed: How Oracle Killed Java EE",
      "search": [
        "Negotiations Failed: How Oracle Killed Java EE",
        "Normal",
        "https://headcrashing.wordpress.com/2019/05/03/negotiations-failed-how-oracle-killed-java-ee/",
        "Today Eclipse Foundations president Mike Milinkovic blogged about the final result of the confidential trademark negotiations between Oracle and the Eclipse Foundation. As we remember, Oracle announced that Java EE will be open sourced to that organization and it would become true open source. After 18 months of intensive negotiations the effort has come to an end: It failed. There will be no trademark agreement. The reason simply spoken is, according to the recent board meeting minutes, that Oracle wanted to have in turn a set of inacceptable demands. Some of them would put the existence of the Eclipse Foundation at severe risk. Oracle claimed that products distributed by the Eclipse Foundation (like the Eclipse IDE) must only be bundled with Java runtimes certified particularly by Oracle and its licencees not any other vendors certification and not any uncertified runtime. Hence, the IDE and GlassFish wouldnt be vendor-neutral products anymore. This restriction was not told at the start of the negotations, it was introduced much later, while the transfer was already in progress. One could assume that it was a reaction upon the donation of IBMs OpenJ9 JVM, which is a clear threat to Oracles Java business. But once Eclipse products would be not vendor-neutral anymore, the EFs tax exemption might become void, which would mean a financial fiasco, or possibly mean the end of the organization as a hole. Hence, it not only was inacceptable, but it was simply impossibleto agree to Oracles requests, so the negotiations more or less completely failed. What is left over is not more but also not less the end of Java EE. The Eclipse Foundation may use some rather outdated code, but must not modify it. If it gets modified, it must be renamed both, the project name (like JAX-RS, which is not nice but acceptable) but also the package name (like javax.*), which means, existing applications will not run on the updated platform without recompilation of the application after intensive refactoring. Hence, it will become a completely new and incompatible platform, the worst case possible, as it not only voids the WORA (Write Once Run Anywhere) principle, it simply wont happen in reality: After 18 months virtually no application vendor really wants to spend the time and money to update all customers with recompiled versions just for the sake of a renamed platform with a dubios future. The future is unclear because Oracle already started a blocking politics at the Eclipse Foundations board, where Oracle has a seat, and where unanimous decisions are needed. Oracle now has the power, and apparently will use that power, to block the foundations future. It demonstrated that power already in a board meeting, where they had the sole vote against an otherwise unaimous move. The current reaction of the Eclipse Foundation is to demonstrate success to rescue at least some value of the intensively marketed Jakarta trademark. But at what price? For what keeping a trademark that became an empty hull now? It now is not the successor of Java EE as a global standard anymore, it is just some framework made by some foundation, and users eventually will learn and draw conclusions. Currently plans have intensivated to rename everything ASAP. But who will actually jump on that train, when it implies changing all existing applications? Eclipses Mike Milinkovic still sees the future bright. For me, the glass is not just half-empty anymore: Today it cracked into pieces. This is the day when Java EE was killed by Oracle. Find more interesting Java and Jakarta topics covered on my Youtube channel! About Markus Karg Java Guru with +30 years of experience in professional software development. I travelled the whole world of IT, starting from Sinclair's great ZX Spectrum 48K, Commodore's 4040, over S/370, PCs since legendary XT, CP/M, VM/ESA, DOS, Windows (remember 3.1?), OS/2 WARP, Linux to Android and iOS... and still coding is my passion, and Java is my favourite drug! ",
        "The Java ecosystem has been slowly dying for years, it's already the new Cobol at this stage.<p>I have the impression that a lot of the mindshare has switched to the Node and Javascript ecosystem, especially the frontend devs, via the Typescript / Angular path, which is a natural path to Java developers due to the comfort given by familiar concepts like static types, classes, etc.<p>When I used to do Java, I always found that Spring was a much better framework than Java EE, and have used it in most projects I've worked.<p>Oracle did not take a note from the Microsoft book and is really behaving that an evil corporate overlord.<p>It's clear at this stage that they bought Sun in order to slowly turn Java proprietary, and charge billions to the companies that are now fully Java-based for the next few decades.<p>I'm glad I saw the writing on the wall and switched, but the problem is that Java is still being taught a lot at schools, and school programs especially universities are hard to adapt and only change every 4-5 years or so.",
        "Oracle makes Java a risk factor in all projects. I stopped approving new Java projects in my team 2 years ago after we switched to Go. This wasn’t a decision we took lightly and it took almost a decade for me to be comfortable with leaving Java behind.<p>But it is the right thing to do. Oracle is not trustworthy."
      ],
      "relevant": "true"
    },
    {
      "id": 20377175,
      "title": "Quick start guide to research on human factors of software engineering",
      "search": [
        "Quick start guide to research on human factors of software engineering",
        "Normal",
        "http://web.eecs.utk.edu/~azh/blog/guidehciseresearch.html",
        "Austin Z. Henley Assistant Professor azh@utk.edu @austinzhenley github/AZHenley This guide is meant to help new graduate students get a short introduction to research at the intersection of human-computer interaction (HCI) and software engineering (SE). By reading the materials listed below, you will get a small taste of the field. ",
        "In my experience for most developers the behaviors boil down to just a few questions?<p>1. Are the developers willing to write original code or must they be limited to configurations or tooling?<p>2. Are the developers willing to accept any API (RTFM) or must the developers be limited to prior known APIs?<p>3. Are the developers willing to accept failure for missing unspecified, but commonly known, requirements such as accessibility, usability, security, or domain specific knowledge?<p>4. Are the developers willing to alter their personal routines to accommodate a shift in requirements and delivery dates or do the developers shift requirements to accommodate their routines, such as work-life balance?<p>5. Will the developers write technical documentation to describe process and approach or will the developers shift requirements in anticipation of forth-coming technical documentation?<p>6. Will the developers refactor code to achieve simplicity (imperative), descriptive concepts (declarative), code style, or not at all? The motivations generally do not overlap.<p>7. Will the developers accept code that better achieves business concerns or end-user preferences (object measures) in violation to preferred structures or styles (subjective measures)?<p>8. Are the developers willing to read the existing code (RTFC) before recommending new tools or solutions?",
        "I really want this kind of research to flourish, but the first click I made on an interesting looking paper led me to: \"To measure tool usage, we randomly sampled code changes from four Eclipse and eight Mylyn developers and ascertained, for each refactoring, if it was performed manually or with tool support.  We found that refactoring tools are seldom used: 11 percent by Eclipse developers and 9 percent by Mylyn developers.\"<p>To be fair, I haven't read the paper and the rest of the abstract looks reasonable: \"To understand refactoring practice at large, we drew from a variety of data sets spanning more than 39,000 developers, 240,000 tool-assisted refactorings, 2,500 developer hours, and 12,000 version control commits.\"<p>But what the heck is the first bit for?  Of 12 people I know, the vast majority don't use refactoring tools.  That's not the basis on which to launch a study.  I've skimmed the abstracts of the other papers as well and I'm not all that impressed.  Everything seems to be doing comparisons against Eclipse.  While Eclipse has a variety of different usability features, I'm actually not convinced any of them help at all (which is why I don't use it ;-) ).  So at the very least, I'd like to see a baseline against a traditional text editor like Emacs or Vim.  The \"improvements\" in usability that they are measuring may simply be the avoidance of problems in Eclipse.  I'm not trying to start an editor war here, I'm just saying you can't assume that any single editor is a good baseline.  I'd argue strenuously that feature rich editors like Eclipse, IntelliJ, VS Code, etc, etc are particularly bad candidates because nobody has really measured the effectiveness of their features.<p>Without being too negative, I hope there are better papers on these kinds of topics because I think it's incredibly important."
      ],
      "relevant": "false"
    },
    {
      "id": 19572994,
      "title": "Ghidra source code officially released",
      "search": [
        "Ghidra source code officially released",
        "Normal",
        "https://github.com/NationalSecurityAgency/ghidra",
        "Ghidra Software Reverse Engineering Framework Ghidra is a software reverse engineering (SRE) framework created and maintained by the National Security Agency Research Directorate. This framework includes a suite of full-featured, high-end software analysis tools that enable users to analyze compiled code on a variety of platforms including Windows, macOS, and Linux. Capabilities include disassembly, assembly, decompilation, graphing, and scripting, along with hundreds of other features. Ghidra supports a wide variety of processor instruction sets and executable formats and can be run in both user-interactive and automated modes. Users may also develop their own Ghidra extension components and/or scripts using Java or Python. In support of NSA's Cybersecurity mission, Ghidra was built to solve scaling and teaming problems on complex SRE efforts, and to provide a customizable and extensible SRE research platform. NSA has applied Ghidra SRE capabilities to a variety of problems that involve analyzing malicious code and generating deep insights for SRE analysts who seek a better understanding of potential vulnerabilities in networks and systems. If you are a U.S. citizen interested in projects like this, to develop Ghidra and other cybersecurity tools for NSA to help protect our nation and its allies, consider applying for a career with us. Install To install an official pre-built multi-platform Ghidra release: Install JDK 11 64-bit Download a Ghidra release file Extract the Ghidra release file Launch Ghidra: ./ghidraRun (or ghidraRun.bat for Windows) For additional information and troubleshooting tips about installing and running a Ghidra release, please refer to docs/InstallationGuide.html which can be found in your extracted Ghidra release directory. Build To create the latest development build for your platform from this source repository: Install build tools: JDK 11 64-bit Gradle 6 or 7 make, gcc, and g++ (Linux/macOS-only) Microsoft Visual Studio (Windows-only) Download and extract the source: Download from GitHub $ unzip ghidra-master $ cd ghidra-master NOTE: Instead of downloading the compressed source, you may instead want to clone the GitHub repository: git clone https://github.com/NationalSecurityAgency/ghidra.git Download additional build dependencies into source repository: $ gradle -I gradle/support/fetchDependencies.gradle init Create development build: The compressed development build will be located at build/dist/. For more detailed information on building Ghidra, please read the Developer Guide. Develop User Scripts and Extensions Ghidra installations support users writing custom scripts and extensions via the GhidraDev plugin for Eclipse. The plugin and its corresponding instructions can be found within a Ghidra release at Extensions/Eclipse/GhidraDev/. Advanced Development To develop the Ghidra tool itself, it is highly recommended to use Eclipse, which the Ghidra development process has been highly customized for. Install build and development tools: Follow the above build instructions so the build completes without errors Install Eclipse IDE for Java Developers Prepare the development environment: $ gradle prepdev eclipse buildNatives Import Ghidra projects into Eclipse: File -> Import... General | Existing Projects into Workspace Select root directory to be your downloaded or cloned ghidra source repository Check Search for nested projects Click Finish When Eclipse finishes building the projects, Ghidra can be launched and debugged with the provided Ghidra Eclipse run configuration. For more detailed information on developing Ghidra, please read the Developer Guide. Contribute If you would like to contribute bug fixes, improvements, and new features back to Ghidra, please take a look at our Contributor Guide to see how you can participate in this open source project. ",
        "I thought the source was released at the same time as the tool...",
        "Someone, with the time to be project maintainer, fork it and license it under the Crockford license.<p><a href=\"https://en.m.wikipedia.org/wiki/Douglas_Crockford#%22Good,_not_Evil%22\" rel=\"nofollow\">https://en.m.wikipedia.org/wiki/Douglas_Crockford#%22Good,_n...</a>"
      ],
      "relevant": "true"
    },
    {
      "id": 21195196,
      "title": "Decoding the Ancient Greek Astronomical Calculator: Antikythera Mechanism",
      "search": [
        "Decoding the Ancient Greek Astronomical Calculator: Antikythera Mechanism",
        "Normal",
        "https://fermatslibrary.com/s/decoding-the-ancient-greek-astronomical-calculator-known-as-the-antikythera-mechanism",
        "LETTERS Decoding the ancient Greek astronomical calculator known as the Antikythera Mechanism T. Freeth 1,2 , Y. Bitsakis 3,5 , X. Moussas 3 , J. H. Seiradakis 4 , A. Tselikas 5 , H. Mangou 6 , M. Zafeiropoulou 6 , R. Hadland 7 , D. Bate 7 , A. Ramsey 7 , M. Allen 7 , A. Crawley 7 , P. Hockley 7 , T. Malzbender 8 , D. Gelb 8 , W. Ambrisco 9 & M. G. Edmunds 1 The Antikythera Mechanism is a unique Greek geared device, con- structed around the end of the second century BC. It is known 19 that it calculated and displayed celestial information, particularly cycles such as the phases of the moon and a luni-solar calendar. Calendars were important to ancient societies 10 for timing agricul- tural activity and fixing religious festivals. Eclipses and planetary motions were often interpreted as omens, while the calm regular- ity of the astronomical cycles must have been philosophically attractive in an uncertain and violent world. Named after its place of discovery in 1901 in a Roman shipwreck, the Antikythera Mechanism is technically more complex than any known device for at least a millennium afterwards. Its specific functions have remained controversial 1114 because its gears and the inscriptions upon its faces are only fragmentary. Here we report surface imaging and high-resolution X-ray tomography of the surviving fragments, enabling us to reconstruct the gear function and double the number of deciphered inscriptions. The mechanism predicted lunar and solar eclipses on the basis of Babylonian arithmetic- progression cycles. The inscriptions support suggestions of mech- anical display of planetary positions 9,14,15 , now lost. In the second century BC, Hipparchos developed a theory to explain the irregu- larities of the Moons motion across the sky caused by its elliptic orbit. We find a mechanical realization of this theory in the gear- ing of the mechanism, revealing an unexpected degree of technical sophistication for the period. The bronze mechanism (Fig. 1), probably hand-driven, was ori- ginally housed in a wooden-framed case 1 of (uncertain) overall size 315 3 190 3 100 mm (Fig. 2). It had front and back doors, with astronomical inscriptions covering much of the exterior of the mech- anism. Our new transcriptions and translations of the Greek texts are given in Supplementary Note 2 (glyphs and inscriptions). The detailed form of the lettering can be dated to the second half of the second century BC, implying that the mechanism was constructed during the period 150100 BC, slightly earlier than previously sug- gested 1 . This is consistent with a date of around 8060 BC for the wreck 1,16 from which the mechanism was recovered by some of the first underwater archaeology. We are able to complete the recon- struction 1 of the back door inscription with text from fragment E, and characters from fragments A and F (see Fig. 1 legend for fragment nomenclature). The front door is mainly from fragment G. The text is astronomical, with many numbers that could be related to planetary motions; the word sterigmos (STGRICMOS, translated as sta- tion or stationary point) is found, meaning where a planets appar- ent motion changes direction, and the numbers may relate to planetary cycles. We note that a major aim of this investigation is to set up a data archive to allow non-invasive future research, and access to this will start in 2007. Details will be available on www.an- tikythera-mechanism.gr. The back door inscription mixes mechanical terms about con- struction (trunnions, gnomon, perforations) with astronom- ical periods. Of the periods, 223 is the Saros eclipse cycle (see Box 1 for a brief explanation of astronomical cycles and periods). We discover the inscription spiral divided into 235 sections, which is 1 Cardiff University, School of Physics and Astronomy, Queens Buildings, The Parade, Cardiff CF24 3AA, UK. 2 Images First Ltd, 10 Hereford Road, South Ealing, London W5 4SE, UK. 3 National and Kapodistrian University of Athens, Department of Astrophysics, Astronomy and Mechanics, Panepistimiopolis, GR-15783, Zographos, G reece. 4 Aristotle University of Thessaloniki, Department of Physics, Section of Astrophysics, Astronomy and Mechanics, GR-54124 Thessaloniki, Greece. 5 Centre for History and Palaeography, National Bank of Greece Cultural Foundation, P. Skouze 3, GR-10560 Athens, Greece. 6 National Archaeological Museum of Athens, 1 Tositsa Str., GR-10682 Athens, Greece. 7 X-Tek Systems Ltd, Tring Business Centre, Icknield Way, Tring, Hertfordshire HP23 4JX, UK. 8 Hewlett-Packard Laboratories, 1501 Page Mill Road, Palo Alto, California 94304, USA. 9 Foxhollow Technologies Inc., 740 Bay Road, Redwood City, California 94063, USA. Figure 1 | The surviving fragments of the Antikythera Mechanism. The 82 fragments that survive in the National Archaeological Museum in Athens are shown to scale. A key and dimensions are provided in Supplementary Note 1 (fragments). The major fragments A, B, C, D are across the top, starting at top left, with E, F, G immediately below them. 27 hand-cut bronze gears are in fragment A and one gear in each of fragments B, C and D. Segments of display scales are in fragments B, C, E and F. A schematic reconstruction is given in Fig. 2. It is not certain that every one of the remaining fragments (numbered 175) belong to the mechanism. The distinctive fragment A, which contains most of the gears, is approximately 180 3 150 mm in size. We have used three principal techniques to investigate the structure and inscriptions of the Antikythera Mechanism. (1) Three-dimensional X-ray microfocus computed tomography 24 (CT), developed by X-Tek Systems Ltd. The use of CT has been crucial in making the text legible just beneath the current surfaces. (2) Digital optical imaging to reveal faint surface detail using polynomial texture mapping (PTM) 25,26 , developed by Hewlett- Packard Inc. (3) Digitized high-quality conventional film photography. Vol 444 | 30 November 2006 | doi:10.1038/nature05357 587 Natu re Pu blishin g Gro u p 2 0 0 6 the key to understanding the function 6 of the upper back dial. The references to golden little sphere and little sphere probably refer to the front zodiac display for the Sun and Moonincluding phase for the latter. The text near the lower back dial includes Pharos and from south (about/around).Spain (ISPANIA) ten. These geograph- ical references, together with previous readings 1 of towards the east, west-north-west and west-south-west suggest an eclipse function for the dial, as solar eclipses occur only at limited geograph- ical sites, and winds were often recorded 1719 in antiquity with eclipse observations. Possibly this information was added to the mechanism during use. Turning to the dials themselves, the front dial displays the position of the Sun and Moon in the zodiac, and a corresponding calendar 1 of 365 days that could be adjusted for leap years. Previously 1 , it was suggested that the upper back dial might have five concentric rings with 47 divisions per turn, showing the 235 months of the 19-year Metonic cycle. A later proposal 5 augments this with the upper sub- sidiary dial showing the 76-year Callippic cycle. Our optical and X-ray microfocus computed tomography (CT) imaging confirms these proposals, with 34 scale markings discovered on the upper back dial. On the basis of a statistical analysis analogous to that described for gear tooth counts below, we confirm the 235 total divisions. We also find from the CT that the subsidiary dial is indeed divided into quadrants 1,6 , as required for a Callippic dial. In agreement with the back door inscription, we also substantiate the perceptive proposal 5,20 that the dial is in fact a spiral, made from semicircular arcs displaced Figure 2 | A schematic view of the mechanism to illustrate the position of major inscriptions and dials. The front dial has two concentric scales. The inner scale shows the Greek zodiac with 360 divisions. There are occasional Greek letters denoting references to the Parapegma inscription, and we add three further reference letters (Z, H, H) to Prices description 1 . The Parapegma is a star almanac showing rising and settings at dawn or evening of particular stars or constellations, which we will discuss elsewhere. Its form is consistent with a date of late second century BC. The outer (originally) movable scale is a calendar carrying the Egyptian names of the months with Greek letters. The Egyptian calendar of 365 days, with twelve 30-day months and 5 extra (epagomenai) days was in standard use in Greek astronomy. The effect of the extra quarter day in a year could be corrected by turning the scale one day every four yearsand a sequence of holes to take a locking pin is observed under the scale. We find that spacing of the holes is indeed what would be expected for a total of 365 days, with a possible range 363365. The position of the Sun and Moon would have been indicated by pointers across the dial scales, and a device 7 showing the phase of the Moon was probably carried round on the lunar pointer. It is not clear whether the Sun position pointer would have been separated from a date pointer, or whether any planetary positions might have been displayed. The spiral upper back dial displays the luni-solar Metonic sequence of 235 lunar months with a subsidiary dial showing the Callippic cycle, while the spiral lower back dial displays the 223-lunar-month Saros eclipse cycle with a subsidiary dial showing the Exeligmos cycle. Box 1 | Astronomical cycles known to the Babylonians The lunar (or synodic) month is the interval between the Moon being at the same phasefor example, full moon to full moon. The Metonic cycle results from the close equality of 19 years to 235 lunar months. It represents the return to the same phase of the Moon on the same date in the year. After the cycle, the Sun, Moon and Earth are back in nearly the same relative orientations. The Moon appears to return to the same point in the sky relative to the zodiac in a sidereal month, and in 19 years there are 235 1 19 5 254 sidereal months. The 76-year Callippic cycle is four Metonic cycles minus one dayand improves the accuracy of reconciling solar years with whole numbers of lunar months. The Saros is an eclipse repeat cycle. If either a solar or lunar eclipse occurs, a very similar eclipse will occur 223 lunar months later 23 .A record of past eclipses can thus be used to predict future occurrences. The cycle arises from the coincidence of three orbital periods of the Moon. These are: (1) same phase to same phase, 223 synodic monthseclipses will of course only occur at new or full Moon in the month; (2) the lunar crossing of the Earth Sun orbital plane, 242 draconitic monthseclipses can only occur near these points (nodes) of co-alignment; (3) similar Earth Moon distances which occur on the period from apogee to apogee of the Moons orbit, 239 anomalistic months. The distance will determine the magnitude of the eclipse, ensuring the similarity of eclipses at the period of the cycle. The Saros cycle is not an integer number of days (6,585M), causing the eclipses in successive cycles to be displaced by eight hours in time (and solar eclipses, only visible at limited geographical locations, to be displaced by 120u in longitude). True repeats come after 3 Saros cycles, the 54-year Exeligmos cycle, but not with identical solar eclipse paths. LETTERS NATURE | Vol 444 | 30 November 2006 588 Natu re Pu blishin g Gro u p 2 0 0 6 to two centres on the vertical midline. In the CT of fragment B we find a new feature that explains why the dial is a spiral: a pointer-follower device (Fig. 3) travelled around the spiral groove to indicate which month (across the five turns of the scale) should be read. From our CT data of the 48 scale divisions observed in fragments A, E and F, we establish 223 divisions in the four-turn 5,20 spiral on the lower back dial, the spiral starting at the bottom of the dial. This is the Saros eclipse cycle, whose number is on the back door inscription. The 54-year Exeligmos cycle of three Saros cycles is shown on the lower subsidiary dial. Between the scale divisions of the Saros dial we have identified 16 blocks of characters, or glyphs (see Supplementary Note 2 (glyphs and inscriptions)) at intervals of one, five and six months. These are eclipse predictions and contain either S for a lunar eclipse (from SELGNG, Moon) or G for a solar eclipse (from GLIOS, Sun) or both. A correlation analysis (analogous to DNA sequence matching) with historic eclipse data 21 (all modern eclipse data and predictions in our work are from this reference) indicates that over a period of 400 1 BC, the sequence of eclipses marked by the identified glyphs would be exactly matched by 121 possible start dates. The matching only occurs if the lunar month starts at first crescent, and confirms this choice of month start in the mechanism. The sequences of eclipses can then be used to predict the expected position of glyphs on the whole dial, as seen in Fig. 4. The dial starts and finishes with an eclipse. Although Ptolemy indicates that the Greeks recorded eclipses in the second century BC, the Babylonian Saros canon 1719 is the only known source of sufficient data to construct the dial. The functions of the mechanism are determined by the tooth counts of the gears. These are based mainly on the CT, using angular measurement from a nominal centre to the remains of tooth tips. In a few cases all teeth can be seen, but many gears are incomplete. Counts are established by fitting models with regularly spaced teeth and minimising the r.m.s. deviation from the measurementsvarying the centre in software (when unclear) to find the best-fit solution or solutions (see Supplementary Note 3 (gears)). We have adopted a systematic nomenclature of lower case letters for the axis of the gear, with numbering increasing with ordering from the front of the mech- anism. Hypothetical (lost) gears are denoted by italics. Several models have been proposed for the gear trains 1,2,46,8 . We agree with the assumption of four missing gears (n1, n2, p1, p2) to drive the Metonic and Callippic dials 4 . We propose a new reconstruc- tion for the other trains, which uses all extant gears (except the lone r1 0 1 2 3 4 5 cm Figure 4 | Reconstruction of the back dials. A composite of fragments A, B, E and F. The Metonic calendar is at top, with its subsidiary Callippic dial. The Saros eclipse cycle is below, with its subsidiary Exeligmos dial. The 16 observed eclipse glyphs are shown in turquoise on the Saros dial, with 35 hypothetical glyphs in violet. The hypothetical glyphs are based on the criterion that 99% of the 121 sequences exactly matching the observed glyphs have an eclipse at the month position. Both main dials would have a pointer-follower (see Fig. 3) to indicate the relevant lunar month on the spiral. The monthly divisions on the Metonic upper back dial are not simply scribed directly across all five turns, as might be expected for simplicity of construction. There are small misalignments, implying a systematic attempt at marking full (30-day) and hollow (29-day) months. The incomplete data do not allow good analysis, other than a hint of bimodality in the interval distribution. If the marking out of the scale were carried out using the mechanisms gearing, then this would greatly pre-date known dividing engines 27 by many centuries. Figure 3 | The pointer-follower lunar month indicator of the upper back dial. On the left, false-colour sections through CT images, analysed with VGStudio Max software by Volume Graphics GmbH. These show two views at right angles of the pointer-follower in the Metonic dial in fragment B. On the right, a computer reconstruction of the device from two different angles (with the Metonic scale omitted for clarity). The pin was constrained to follow the groove between the spiral scales (the scale is shown in Fig. 4), causing the device to slide along the month pointer to indicate which ring on the spiral scale specified the month. A similar pointer-follower would have been present on the lower back (Saros) dial. The Metonic dial would have required re- setting every 19 years, the Saros dial after 18 years. The groove-pin may have been held in place by the small pin through the front of the device, enabling its removal for re-setting. NATURE | Vol 444 | 30 November 2006 LETTERS 589 Natu re Pu blishin g Gro u p 2 0 0 6 from the separate fragment D). The proposed model is shown in Fig. 5. We require the assumption of only one further gear (m3), whose proposed shaft is clearly broken off in the CT. A detailed description is contained in Supplementary Note 3 (gears). Of particular note is the dual use of the large gear, e3, at the back of the mechanism, which has found no use in previous models. In our model, it is powered by m3 as part of a fixed-axis train that turns the Saros and Exeligmos dials for eclipse prediction, and also doubles as the epicyclic table for the gears k1, k2. These are part of epicyclic gearing that calculates the theory of the irregular motion of the moon, developed by Hipparchos some time between 146 and 128 BC (ref. 22)the first anomaly, caused by its elliptical orbit about the Earth. The period of this anomaly is the period from apogee to apogee (the anomalistic month). To realize this theory, the mean sidereal lunar motion is first calculated by gears on axes c, d and e and this is then fed into the epicyclic system. As explained in Fig. 6, a pin- and-slot device on the epicyclic gears k1 and k2, clearly seen in the CT, provides the variation. This was previously identified 4 , but rejected as a lunar mechanism. The remarkable purpose of mounting the pin-and-slot mechanism on the gear e3 is to change the period of variation from sidereal month (that is, the time taken for the Moon to orbit the Earth relative to the zodiac), which would occur if k1 and k2 were on fixed axes, to anomalistic monthby carrying the gears epicyclically at a rate that is the difference between the rates of the Front dials Lunar phase Lost epicyclic gearing Pin and slot Hipparchos lunar mechanism Possibly Hipparchos solar mechanism and planetary mechanisms Hipparchos sidereal month Year Back dials Luni-solar calendar Input Eclipse prediction Saros 4Metonic 5Callippic Exeligmos Zodiac Egyptian calendar Parapegma Figure 5 | New reconstruction of the gear trains. A schematic sectional diagram (not to scale) of the gearing, following the style of Price 1 and Wright 4 . The viewpoint is looking down from the top right of the mechanism, and is stretched in the direction of the main axes to show the structure. Features that are outlined or labelled in red are hypothetical. Gears are lettered with their shaft, and numbered with increasing distance from the front dial. The two-or-three digit number on the gear is its actual or assumed tooth count (see Supplementary Note 3 (gears)). Hypothetical gears n1, n2, p1, p2 have been proposed previously, the gear m3 on the broken-off shaft m is our addition. All gears, except the lone one in fragment D, are now accounted for in the mechanism. The function of the trains is outlined in the text. We find no evidence in the CT for an idler wheel carried on e3 and between e5 and k1 or between k2 and e6, as has been previously proposed 1,2,4 . The CT shows a pin through axis e between gears e1 and e2. We believe its purpose is to retain the square-bossed e1 on the shaft, but its passage right through the axis rules out previous reconstructions 1,2,4 where e1 and e2 were joined by an outer pipe rotating around the shaft e. Figure 6 | The Hipparchos lunar mechanism mounted on gear e3. The figure is based on a CT slice of part of fragment A, showing (top) shaft e and (bottom) shaft k. The complete geometry cannot be seen in a single CT slice. The two gears on the e axis (e5 and e6) are coaxial, while the two k gears rotate on slightly displaced axes. k1 has a pin on its face that engages with a radial slot in k2 (and this was previously reported 5 ). In the figure the pitch circles of e5 and k1 are shown in turquoise and those of e6 and k2 in pink. The gear e5 drives k1, which drives k2 via the pin-and-slot, introducing a quasi-sinusoidal variation in the motion, which is then transmitted to e6. Our estimate of the distance between the arbors on the k gears is about 1.1 mm, with a pin distance of 9.6 mm, giving an angular variation of 6.5u. According to Ptolemy 28 , Hipparchos made two estimates for a lunar anomaly parameter, based on eclipse data, which would require angular variations of 5.9u or 4.5u herealthough estimates of the anomaly from Babylonian astronomy were generally larger. The difference from our estimated value is probably not significant given the difficulty of precise measurement of the axes in the CT. The harmonic variation, together with the effect of carrying the gears on e3 (which rotates at the period of the Moons apogee around the Earth), would simulate the correct variation for the Moons mean (sidereal) rotation rate on the front dial. An (unexplained) regular pentagon is visible at the centre of gear e5. It is tempting to associate the conception of the mechanism with Hipparchos himself, but he was not the first to assume eccentric or epicyclic models. LETTERS NATURE | Vol 444 | 30 November 2006 590 Natu re Pu blishin g Gro u p 2 0 0 6 sidereal and anomalistic months, that is, at the rate of rotation of about 9 years of the Moons apogee. Gears with 53 teeth are awkward to divide. So it may seem sur- prising that the gearing includes two such gears (f1, l2), whose effects cancel in the train leading to the Saros dial. But the gearing has been specifically designed so that the epicyclic table e3 turns at the rate of rotation of the Moons apogeethe factor 53 being derived from the calculation of this rotation from the Metonic and Saros cycles, which are the bases for all the prime factors in the tooth counts of the gears. The establishment of the 53-tooth count of these gears is powerful confirmation of our proposed model of Hipparchos lunar theory. The output of this complex system is carried from e6 back through e3 and thence, via e1 and b3, to the zodiac scale on the front dial and the lunar phase 7 mechanism. Our CT confirms the complex structure of axis e that this model entails. The Antikythera Mechanism shows great economy and ingenuity of design. It stands as a witness to the extraordinary technological potential of Ancient Greece, apparently lost within the Roman Empire. Received 10 August; accepted 17 October 2006. 1. Price, D. de S. Gears from the Greeks: The Antikythera Mechanism A calendar computer from ca. 80 BC. Trans Am. Phil. Soc. New Ser. 64, 1 70 (1974); reprinted by Science History Publications, New York (1975). 2. Wright, M. T. Epicyclic gearing and the Antikythera Mechanism, Part I. Antiquar. Horol. 27, 270 279 (2003). 3. Wright, M. T., Bromley, A. G. & Magou, H. Simple X-ray tomography and the Antikythera Mechanism. PACT J. Eur. Study Group Phys. Chem. Biol. Math. Tech. Appl. Archaeol. 45, 531 543 (1995). 4. Wright, M. T. The Antikythera Mechanism: a New Gearing Scheme. Bull. Sci. Instrum. Soc. 85, 2 7 (2005). 5. Wright, M. T. Epicyclic gearing and the Antikythera Mechanism, Part II. Antiquar. Horol. 29, 51 63 (2005). 6. Wright, M. T. Counting months and years: The upper back dial of the Antikythera Mechanism. Bull. Sci. Instrum. Soc. 87, 8 13 (2005). 7. Wright, M. T. The Antikythera Mechanism and the early history of the moon- phase display. Antiquar. Horol. 29, 319 329 (2006). 8. Wright, M. T. in Proc. 2nd Int. Conf. on Ancient Greek Technology (ed. Tassios, Th.) 49 60 (Technical Chamber of Greece, Athens, 2006). 9. Wright, M. T. A planetarium display for the Antikythera Mechanism. Horol. J. 144(5), 169 173 (2002); erratum 144, 193 (2002). 10. North, J. D. The Fontana History of Astronomy and Cosmology (Fontana, London, 1994). 11. Bromley, A. G. The Antikythera Mechanism. Horol. J. 132, 412 415 (1990). 12. Bromley, A. G. in Bassernet Vol. 2, No. 3 (Basser Department of Computer Science, Univ. Sydney, June, 1993). 13. Freeth, T. The Antikythera Mechanism: 1. Challenging the classic research. Mediterr. Archaeol. Archaeom. 2, 21 35 (2002). 14. Edmunds, M. & Morgan, P. The Antikythera Mechanism: still a mystery of Greek astronomy? Astron. Geophys. 41, 6.10 6.17 (2000). 15. Freeth, T. The Antikythera Mechanism: 2. Is it Posidonius orrery? Mediterr. Archaeol. Archaeom. 2, 45 58 (2002). 16. Illsley, J. S. History and Archaeology of the ShipLecture Notes. http:// cma.soton.ac.uk/HistShip/shlect36.htm (1998). 17. Stephenson, F. R. Historical Eclipses and Earths Rotation (Cambridge Univ. Press, Cambridge, UK, 1997). 18. Steele, J. M. Observations and Predictions of Eclipse Times by Early Astronomers (Kluwer Academic, Dordrecht, 2000). 19. Steele, J. M. Eclipse prediction in Mesopotamia. Arch. Hist. Exact Sci. 54, 421 454 (2000). 20. Wright, M. T. The Scholar, the Mechanic and the Antikythera Mechanism. Bull. Sci. Instrum . Soc. 80, 4 11 (2003). 21. Espenak, F. NASA Eclipse Home Page. http://sunearth.gsfc.nasa.gov/eclipse/ eclipse.html (2005). 22. Jones, A. The adaptation of Babylonian methods in Greek numerical astronomy. Isis 82, 440 453 (1991). 23. Britton, J. P. in Die Rolle der Astronomie in den Kulturen Mesopotamiens (ed. Galter, H. D.) 61 76 (rm-Druck & Vergansgesellschaft, Graz, 1993). 24. X-Tek Systems Ltd. 3-D computed tomography. http://www.xtek.co.uk/ct/ (2006). 25. Malzbender, T. & Gelb, D. Polynomial texture mapping. http:// www.hpl.hp.com/research/ptm/ (2006). 26. Brooks, M. Tricks of the light. New Sci. 170, 38 49 (2001). 27. Chapman, A. Dividing the Circle (Wiley, Chichester, 1995). 28. Toomer, G. J. Ptolemys Almagest (transl. Toomer, G. J.) (Princeton Univ. Press, Princeton, New Jersey, 1998). Supplementary Information is linked to the online version of the paper at www.nature.com/nature. Acknowledgements This work was financed by the Leverhulme Trust, the Walter Hudson Bequest, the University of Athens Research Committee and the Cultural Foundation of the National Bank of Greece. For essential support we thank the Ministry of Culture, Greece (P. Tatoulis), and the National Archaeological Museum of Athens (N. Kalts as). We acknowledge help and advice from J. Ambers, J. Austin, G. Dermody, H. Forsyth, I. Freestone, P. Haycock, V. Horie, A. Jones, M. Jones, P. Kipouros, H. Kritzas, J. Lossl, G. Makris, A. Ray, C. Reinhart, A. Valassopoulos, R. Westgate, T. Whiteside, S. Wright and C. Xenikakis. Author Contributions T.F. carried out most of the CT analysis of structure and its interpretation. Y.B., A.T. and X.M. read, transcribed and translated the inscriptions. H.M and M.Z. catalogued the fragments, provided guidance on X-ray examination, and measured the fragments with J.H.S. R.H. led the team (D.B., A.R., M.A., A.C. and P.H.) that built and operated the Bladerunner CT machine, and provided CT reconstructions and advice. T.M., D.G. and W.A. built, operated and provided software for the PTM. M.G.E. was academic lead, and undertook the statistical analysis. T.F. and Y.B. organised the logistics of the experimental work, with inter-agency liaison by X.M. and J.H.S. The manuscript was written by T.F. and M.G.E. including material from Y.B., A.T., X.M., J.H.S., H.M. and M.Z. T.F. designed the illustrations. Author Information Reprints and permissions information is available at www.nature.com/reprints. The authors declare no competing financial interests. Correspondence and requests for materials should be addressed to M.G.E. (mge@astro.cf.ac.uk). NATURE | Vol 444 | 30 November 2006 LETTERS 591 Natu re Pu blishin g Gro u p 2 0 0 6 View publication statsView publication stats ",
        "He's been scarce for a while, but Clickspring on youtube has a series on rebuilding the Antikythera Mechanism. It's quite fascinating.<p><a href=\"https://www.youtube.com/channel/UCworsKCR-Sx6R6-BnIjS2MA/videos\" rel=\"nofollow\">https://www.youtube.com/channel/UCworsKCR-Sx6R6-BnIjS2MA/vid...</a>",
        "It's easy today to imagine we are smarter than people 2000+ years ago, but it's more like we are standing on the shoulders of a ton of generations before us. I always wonder if I went back in time 2000 years from today, if I would be able to translate my knowledge at all into the limitations of back then. The folks who built this only knew what they knew back then or could imagine, but were still able to build this complex machine."
      ],
      "relevant": "false"
    },
    {
      "id": 20755974,
      "title": "AdoptOpenJDK: Open-source, prebuilt OpenJDK binaries",
      "search": [
        "AdoptOpenJDK: Open-source, prebuilt OpenJDK binaries",
        "Normal",
        "https://adoptopenjdk.net/",
        "HotSpot is the VM from the OpenJDK community. It is the most widely used VM today and is used in Oracles JDK. It is suitable for all workloads. For more details see OpenJDK HotSpot. Eclipse OpenJ9 is the VM from the Eclipse community. It is an enterprise-grade VM designed for low memory footprint and fast start-up and is used in IBMs JDK. It is suitable for running all workloads. For more details see Eclipse OpenJ9. LTS (Long Term Support). These versions have a longer support timeframe. Suitable for enterprise customers. See Support for more information. ",
        "On macOS and Windows their various builds are also available over the Homebrew and Scoop package managers:<p><a href=\"https://github.com/AdoptOpenJDK/homebrew-openjdk\" rel=\"nofollow\">https://github.com/AdoptOpenJDK/homebrew-openjdk</a><p><a href=\"https://github.com/lukesampson/scoop/wiki/Java\" rel=\"nofollow\">https://github.com/lukesampson/scoop/wiki/Java</a>",
        "You don't need extra projects to manage this stuff anymore.<p>There is a great answer here... <a href=\"https://stackoverflow.com/questions/52524112/how-do-i-install-java-on-mac-osx-allowing-version-switching\" rel=\"nofollow\">https://stackoverflow.com/questions/52524112/how-do-i-instal...</a><p><pre><code>  brew install java (12)\n  brew install java11\n</code></pre>\nAnd you can simplify things...<p>In your .bashrc:<p><pre><code>  export JDK_HOME=`/usr/libexec/java_home -v 12` # v9+ change to the version you installed\n  export JAVA_PATH=$JDK_HOME\n  export JAVA_HOME=$JDK_HOME\n  export PATH=\".\"\n  export PATH=\"${PATH}:${JAVA_HOME}/bin\"</code></pre>"
      ],
      "relevant": "true"
    },
    {
      "id": 21907168,
      "title": "DIY ‘Meta Clock’ with 24 Analog Clocks",
      "search": [
        "DIY ‘Meta Clock’ with 24 Analog Clocks",
        "Normal",
        "https://mcuoneclipse.com/2019/12/29/diy-meta-clock-with-24-analog-clocks/",
        "MCU on Eclipse Everything on Eclipse, Microcontrollers and Software Main menu Home Eclipse PEx Components FreeRTOS USB FatFs I2C SPI CDE Compendium Pictures Q&A Books! Bucket List About Requests Mark Dunnett Guest Blog Post navigation Previous Next Human since 1982 claims Human since 1982 have the copyright to works displaying digital time using a grid arrangement of analog clocks Im not a lawyer, but without obligations (imho) I have removed the content. You can read more of the details here: Copyright Law for Makers and Educators Thanks for understanding, Erich ",
        "Dang. I want one of these on my wall!<p>But, I don't have the $$$ for the real ones [0], nor the knowhow to build one using the info in this post.<p>Maybe I'll try to get some time together to learn more about PCB design/hardware... or even try and turn this into a side project to try an open-source collab to make it a more complete kit/tutorial.<p>0 - <a href=\"https://clockclock.com/\" rel=\"nofollow\">https://clockclock.com/</a>",
        "There was an iOS version of this from a Swedish company called Chapel. It appears to be officially licensed from Humans Since 1982.<p>Unfortunately, the app company seems to be gone, so the app is no longer on the App Store (I still have it installed on my devices, though.)<p>But the originators are still around: <a href=\"https://www.humanssince1982.com/\" rel=\"nofollow\">https://www.humanssince1982.com/</a>"
      ],
      "relevant": "false"
    },
    {
      "id": 21207425,
      "title": "Alloy is a language for describing structures and a tool for exploring them",
      "search": [
        "Alloy is a language for describing structures and a tool for exploring them",
        "Normal",
        "https://github.com/AlloyTools/org.alloytools.alloy",
        "Alloy Alloy 6 is a self-contained executable, which includes an extended version of the Kodkod model finder and a variety of SAT solvers, as well as the standard Alloy library and a collection of tutorial examples. The same jar file can be incorporated into other applications to use Alloy as an API, and includes the source code. See the release notes for details of new features. Alloy 6 is a major new release More documentation can be found at: http://alloytools.org/documentation.html. Requirements Alloy runs on all operating systems with a recent JVM (Java 6 or later). It is made available as a runnable jar file with both a cross-platform SAT solver (Sat4j and more efficient native SAT solvers (minisat, lingeling/plingeling, glucose). Note however that starting with macOS High Sierra, it is necessary to install a dedicated JVM to run Alloy on macOS. A .pkg file is provided for that purpose. TL;DR Checkout the project and type ./gradlew build. You find the executable JAR in org.alloytools.alloy.dist/target/org.alloytools.alloy.dist.jar after the build has finished. $ java version # requires 1.8 (and NOT 1.9, gradle does not run on 1.9) java version \"1.8.0_144\" Java(TM) SE Runtime Environment (build 1.8.0_144-b01) Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed model $ git clone --recursive https://github.com/AlloyTools/org.alloytools.alloy.git $ cd org.alloytools.alloy $ ./gradlew build $ java -jar org.alloytools.alloy.dist/target/org.alloytools.alloy.dist.jar # opens GUI Note: if you are behind a proxy, the call to gradlew is likely to fail, unless you pass it further options about the http and https proxies (and possibly your login and password on this proxy). There are several ways to pass these options, a simple one is to type (replace the XXXXX's by the adequate settings): $ ./gradlew -Dhttps.proxyHost=XXXXX -Dhttp.proxyHost=XXXXX -Dhttp.proxyPort=XXXXX \\ -Dhttps.proxyPort=XXXXX -Dhttp.proxyUser=XXXXX -Dhttp.proxyPassword=XXXXX \\ -Dhttps.proxyUser=XXXXX -Dhttps.proxyPassword=XXXXX \\ build Building Alloy The Alloy build is using a bnd workspace setup using a maven layout. This means it can be build with Gradle and the Eclipse IDE for interactive development. Projects are setup to continuously deliver the executable. Projects The workspace is divided into a number of projects: cnf Setup directory. Dependencies are specified in [cnf/central.xml] using the maven POM layout org.alloytools.alloy.application Main application code includes the parser, ast, visualiser, and application code org.alloytools.alloy.dist Project to create the distribution executable JAR org.alloytools.alloy.extra Models and examples org.alloytools.pardinus A Kodkod extension without native code org.alloytools.kodkod.nativesat The native code libraries for Kodkod Relevant Project files This workspace uses bnd. This means that the following have special meaning: cnf/build.xml Settings shared between projects ./bnd.bnd Settings for a project. This file will drag in code in a JAR. cnf/central.xml Dependencies from maven central Eclipse The workspace is setup for interactive development in Eclipse with the Bndtools plugin. Download Eclipse and install it. You can then Import existing projects from the Git workspace. You should be asked to install Bndtools from the market place. You can also install Bndtools directly from the Eclipse Market place (see Help/Marketplace and search for Bndtools). Bndtools will continuously create the final executable. The projects are setup to automatically update when a downstream project changes. IntelliJ IDEA (Ultimate Edition only) Ensure you have the Osmorc plugin is enabled, as this plugin is needed for Bndtools support. It should be enabled by default. Choose \"Import Project\" Select the org.alloytools.alloy directory. Choose \"Import project from external model: Bnd/Bndtools\" and click \"Next\" For \"Select Bnd/Bndtools project to import\", all projects should be checked by default, click \"Next\" For project SDK, Choose \"1.8\", Click Finish Note: do not link the Gradle project, as this will prevent you from running Alloy within IDEA. To run the Alloy GUI within IDEA, navigate to org.alloytools.alloy.application/src/main/java/edu/mit/csail/sdg/alloy4whole/SimpleGUI and run the SimpleGUI class. Gradle In the root of this workspace type ./gradlew. This is a script that will download the correct version of gradle and run the build scripts. For settings look at [gradle.properties] and [settings.gradle]. Continuous Integration The workspace is setup to build after every commit using Travis. It releases snapshots to https://oss.sonatype.org/content/repositories/snapshots/org/alloytools/ for every CI build on Travis. Building the DMG file for OSX systems Currently only the executable jar in org.alloytools.alloy.dist/target/org.alloytools.alloy.dist.jar is build. In the org.alloytools.alloy.dist project, run ../gradlew macos. This will leave the PKG file in target/bundle. CONTRIBUTIONS Please read the CONTRIBUTING to understand how you can contribute. ",
        "There was a fantastic talk at strangeloop this year on Alloy: <a href=\"https://www.youtube.com/watch?v=FvNRlE4E9QQ\" rel=\"nofollow\">https://www.youtube.com/watch?v=FvNRlE4E9QQ</a>. The speaker used it to find a serious security bug in their live code and a feature interaction bug in their UI that had meant they had been writing broken code for the past _year_.<p>(full disclosure I'm referenced towards the end)",
        "Last week Microsoft Research posted an interesting talk by Kevin Buzzard [1] from Imperial College London about how he wants to formalize all mathematics with theorem provers.  He's currently using LEAN [2].  Half of the talk is a discussion of the challenges he's faced convincing other mathematicians that this is valuable, and the other half is about his success using LEAN as a tool to teach undergraduates about formal proofs in general.<p>I think Alloy was mentioned at the end, but not really compared to LEAN.<p>[1]: <a href=\"https://youtu.be/Dp-mQ3HxgDE\" rel=\"nofollow\">https://youtu.be/Dp-mQ3HxgDE</a><p>[2]: <a href=\"https://leanprover.github.io/\" rel=\"nofollow\">https://leanprover.github.io/</a>"
      ],
      "relevant": "true"
    },
    {
      "id": 20490580,
      "title": "Anaxagoras Was Exiled for Claiming the Moon Was a Rock",
      "search": [
        "Anaxagoras Was Exiled for Claiming the Moon Was a Rock",
        "Normal",
        "https://www.smithsonianmag.com/science-nature/ancient-greek-philosopher-was-exiled-claiming-moon-was-rock-not-god-180972447/",
        "Anaxagoras, who lived in the fifth century B.C., was one of the first people in recorded history to recognize that the moon was a rocky, mountainous body. Eduard Lebiedzki / Public Domain Close to the north pole of the moon lies the crater Anaxagoras, named for a Greek philosopher who lived in the fifth century B.C. The eponym is fitting, as Anaxagoras the man was one of the first people in history to suggest the moon was a rocky body, not all too dissimilar from Earth. Streaks of material thrown out during the impact that formed the crater extend 560 miles southward to the rim of another crater, this one named for Plato. Like Plato, Anaxagoras the scholar did most of his work in Athens, but the similarities between the two men stop there. Influenced strongly by the Pythagoreans, Plato posited a mystical universe based on sacred geometric forms, including perfectly circular orbits. Plato eschewed observation and experimentation, preferring to pursue a pure knowledge he believed was innate in all humans. But Anaxagoras, who died around the time Plato was born, had a knack for astronomy, an area of study that requires careful observational and calculation to unlock the mysteries of the universe. During his time in Athens, Anaxagoras made several fundamental discoveries about the moon. He reiterated and expended upon an idea that likely emerged among his predecessors but was not widely accepted in antiquity: that the moon and sun were not gods, but rather objects. This seemingly innocuous belief would ultimately result in Anaxagoras arrest and exile. Anaxagoras crater near the north pole of the moon, imaged by the Lunar Orbiter 4 spacecraft in 1967. NASA Piecing together the lives of early philosophers such as Anaxagoras, who is thought to have written just one book, lost to us today, can be a major challenge for historians. Modern scholars have only fragments to describe the life of Anaxagorasbrief quotes from his teachings and short summaries of his ideas, cited within the works of scholars from later generations, such as Plato and Aristotle. Through persistent observation, Anaxagoras came to believe that the moon was a rock, not totally unlike the Earth, and he even described mountains on the lunar surface. The sun, he thought, was a burning rock. In fragment 18, Anaxagoras says, It is the sun that puts brightness into the moon. While Anaxagoras was not the first to realize that moonlight is reflected light from the sun, he was able to use this concept to correctly explain additional natural phenomena, such as eclipses and lunar phases. Hailing from Clazomenae in the Ionian lands east of the Greek mainland, Anaxagoras grew up during the Ionian Enlightenment, an intellectual revolution that began around 600 B.C. As a young man, he saw Athens and Sparta align to drive the Persian Empire out of Ionia. When he relocated to Athens, Anaxagoras and his contemporaries brought philosophy to the budding Athenian democracy. Although many Greek philosophers of the sixth and fifth centuries B.C. believed in one or a few fundamental elementssuch as water, air, fire and earthAnaxagoras thought there must be an infinite number of elements. This idea was his way of resolving an intellectual dispute concerning the nature of existence that had emerged between the naturalistic-minded philosophers of Ionia to the east and the mystical-minded philosophers to the west, in Greek-colonized Italy, such as Pythagoras and his followers. Daniel Graham, a professor of philosophy at Brigham Young University and one of the few Anaxagoras experts in the world, says that of the Italian-based philosophers, Parmenides in particular influenced Anaxagoras and his ideas about astronomy. Anaxagoras turns the problem of lunar light into a problem of geometry, Graham says. He noted that when the moon is on the opposite side of the Earth than the sun, the full face is illuminated, [producing] a model of the heavens that predicts not only phases of the moon, but how eclipses are possible. The moons phases, Anaxagoras realized, were the result of different portions of the celestial object being illuminated by the sun from Earths perspective. The philosopher also realized that the occasional darkening of the moon must result from the moon, sun and Earth lining up such that the moon passes into the Earths shadowa lunar eclipse. When the moon passes directly in front of the sun, the skies darken during the day, a phenomenon Anaxagoras also described and we now call a solar eclipse. The total lunar eclipse of October 8, 2014, as photographed from California. When the shadow of the Earth covers the moon, only light filtered through Earth's atmosphere reaches the lunar surface, casting the moon in a reddish glow. Alfredo Garcia, Jr. / Flickr under CC BY-SA 2.0 Anaxagoras also wrestled with the origins and formation of the moon, a mystery that still challenges scientists today. The philosopher proposed that the moon was a big rock which the early Earth had flung into space. This concept anticipated a scenario for the moons origin that physicist George Darwin, son of Charles Darwin, would propose 23 centuries later. Known as the fission hypothesis, Darwins idea was that the moon began as a chunk of Earth and was hurled into space by the Earths rapid rotation, leaving behind the Pacific basin. (Today, many astronomers believe that a Mars-sized body slammed into the early Earth, expelling material that then coalesced into the moon, though other theories exist for the origin of our natural satellite.) By describing the moon as a rock of terrestrial origin, and the sun as a burning rock, Anaxagoras moved beyond earlier thinkers, even those who realized the moon was a kind of reflector. This forward thinking got Anaxagoras labeled as a chief denier of the idea that the moon and sun were deities. Such an idea should have been welcome in democratic Athens, but Anaxagoras was a teacher and friend of the influential statesman Pericles, and political factions would soon conspire against him. In power for over 30 years, Pericles would lead Athens into the Peloponnesian wars against Sparta. While the exact causes of these conflicts are a matter of debate, Pericles political opponents in the years leading to the wars blamed him for excessive aggression and arrogance. Unable to hurt the Athenian leader directly, Pericles enemies went after his friends. Anaxagoras was arrested, tried and sentenced to death, ostensibly for breaking impiety laws while promoting his ideas about the moon and sun. In the Athenian democracy, with its democratic trials before large juries on criminal charges being brought by private citizensthere was no district attorneyall trials were basically political trials, Graham says. They were often disguised as being about religion or morality, but they aimed at embarrassing some public figure by going after him directly if he was vulnerable, or a member of his circle if he was not. If you wanted to attack Pericles, but he was too popular to attack directly, you found the weakest link in his group. As a foreigner and intellectual with unorthodox new ideas, Pericles friend and science advisor Anaxagoras was an obvious target. Still holding some political sway, Pericles was able to free Anaxagoras and prevent his execution. Though his life was spared, the philosopher who questioned the divinity of the moon found himself in exile in Lampsacus at the edge of the Hellespont. But his ideas regarding eclipses and lunar phases would live on to this day, and for his recognition of the true nature of the moon, a lunar crater, visited by orbiting spacecraft some 2,400 years later, bears the name Anaxagoras. Ancient Greece Astronomy Moon Outer Space Recommended Videos ",
        "I find the picture of Anaxagoras (the crater) rather annoying, because they didn't orient it with the light source coming from the upper left, as is (or used to be) kind of the convention on a computer screen.",
        "The title of the article doesn't really match what the article has to say about his trial. It does, however, work nicely as an example of a general rule I have:<p>I'm always suspicious when hearing tales about scientists who were punished for their discoveries by less enlightened minds. Looking into it, it mostly turns out they were either sentenced for other crimes or, as this article claims was the case here, that it was most likely a political move masquerading as being motivated by theology.<p>Which itself falls under another similar guideline: if any big societal undertaking (wars unfortunately seem to be the most common example) seems motivated by religion, that's usually not the true reason behind it.<p>Perhaps my own beliefs are colouring my interpretations, but it just seems like people's actual motivations tend to be pragmatic but they market their actions as being out of belief or morality."
      ],
      "relevant": "false"
    },
    {
      "id": 19466001,
      "title": "Theia: A cloud and desktop IDE framework implemented in TypeScript",
      "search": [
        "Theia: A cloud and desktop IDE framework implemented in TypeScript",
        "Normal",
        "https://github.com/theia-ide/theia",
        "Cloud & Desktop IDE Framework Website Scope Roadmap Getting Started Contributing Feedback Documentation License Trademark Website Visit the Theia website for more documentation. Scope Support building browser-based and desktop IDEs Provide a highly flexible architecture for adopters Support VS Code Extension protocol Develop under vendor-neutral open-source governance Roadmap See our roadmap for an overview about the current project goals and the upcoming releases. Getting Started Here you can find guides and examples for common scenarios: Run Theia in Docker Run Theia in Gitpod - a Theia-based IDE for GitHub Develop a Theia application - your own IDE Develop a Theia plugin - a VS Code like extension Develop a Theia extension Test a VS Code extension in Theia Package a desktop Theia application with Electron Contributing Read below to learn how to take part in improving Theia: Fork the repository and run the examples from source Get familiar with the development workflow, Coding Guidelines, Code of Conduct and learn how to sign your work Find an issue to work on and submit a pull request First time contributing to open source? Pick a good first issue to get you familiar with GitHub contributing process. First time contributing to Theia? Pick a beginner friendly issue to get you familiar with codebase and our contributing process. Want to become a Committer? Solve an issue showing that you understand Theia objectives and architecture. Here is a good list to start. Further, have a look at our roadmap to align your contributions with the current project goals. Could not find an issue? Look for bugs, typos, and missing features. Feedback Read below how to engage with Theia community: Join the discussion on Discourse. Ask a question, request a new feature and file a bug with GitHub issues. Star the repository to show your support. Follow Theia on Twitter. Documentation API Documentation Useful Links: Developing Testing Migration Guide API Integration Testing Coding Guidelines Code Organization License Eclipse Public License 2.0 (Secondary) GNU General Public License, version 2 with the GNU Classpath Exception Trademark \"Theia\" is a trademark of the Eclipse Foundation https://www.eclipse.org/theia ",
        "This is a pretty amazing Ide. I see it is part of eclipse che now, is that correct?",
        "I've been using code-server[1] for a month now. These are early days for both projects. Can somebody comment on their Theia v/s Code-Server story?<p>[1] <a href=\"https://github.com/codercom/code-server\" rel=\"nofollow\">https://github.com/codercom/code-server</a>"
      ],
      "relevant": "true"
    },
    {
      "id": 21567800,
      "title": "How to set up Xilinx Vivado for source control",
      "search": [
        "How to set up Xilinx Vivado for source control",
        "Normal",
        "https://github.com/jhallen/vivado_setup",
        "Xilinx Vivado setup for source control This was tested on Vivado version 2019.1 Contents Project setup Build steps Save the script Xilinx IP IP Integrator / Block design XSDK XSDK review Source control for XSDK Rebuild steps Project setup Here is one way to structure your FPGA project so that it is compatible with both Xilinx Vivado GUI in project mode and source control. This setup allows you to check in the minimum number of files needed so that you can easily recreate the project in another sandbox. To save you some time: Once you have a Vivado project, you can not move it to a different directory. The project files are filled with absolute paths. It is therefore pointless to check in the entire project. There is a TCL command \"write_project_tcl\" which generates a TCL script which rebuilds the project in a new directory. This method is shown here. Even with \"write_project_tcl\", the project has to be structured correctly or the script will not work. In particular, none of the files needed to recreate the project should be in the project subdirectory. The TCL file could be used as a starting point for your own build script. However, it may be better to not modify it at all. Instead, repeatedly execute \"write_project_tcl\" throughout development to pick up the latest project changes. Although it's possible to script the entire FPGA build process, it is also important to be able to use project mode to access the Vivado GUI for such tasks as debugging with the integrated logic analyzer and pin-planning. If your setup is incorrect, you will waste a lot of time fixing it, or create a mess in your repository by checking in too many files. Unfortunately, Vivado really would like your source code to be in the project directory, so you have to actively fight it to prevent this. The directory structure should be this: example_fpga/ rebuild.tcl - TCL script created by Vivado. Checked in. rtl/ - Your Verilog (or VHDL) source code. All checked in. cons/ - Your constraint files. All checked in. project_1/ - Vivado project. Nothing here is checked in. ip/ - Xilinx IP. Some files checked in. The idea is to have the minimal set of files checked in so that you get the Vivado project back after a fresh clone. You should only have to type these commands: git clone https://github.com/jhallen/example_fpga.git cd example_fpga vivado -source rebuild.tcl Also, you can always delete project_1/ and rebuild it. rm -rf project_1 vivado -source rebuild.tcl The ip/ directory gets polluted with derived files, but at least Vivado tells you which ones need to be saved in source control. If the correct files are checked in, you can delete all derived files and rebuild: rm -rf project_1 rm -rf ip - Delete all Xilinx IP files (only after you've checked in the source) git checkout ip - Restore the actual source files vivado -source rebuild.tcl Build steps Suppose you don't have the project_1/ and rebuild.tcl script. This is how to create them. Start Vivado. Change directory to example_fpga first. Go through the usual sequence of creating a project, but do not check any of the boxes that say \"copy into project\": You need your Verilog or VHDL source files: You need the .xci files for Xilinx \"IP Catalog\" IP. You also need the wrapper file for block designs (see below for more about this). Do not check the box here: You need your constraint files: Don't check it here either! Then we wait a long time, why is Vivado so slow? Now finally the project appears: Save the script Use the write_project_tcl command to save the script. You will likely need to add the \"-force\" option to allow it overwrite the previous version of the script: Here are the messages this command prints: That's it. Now you can regenerate the project with: rm -rf project_1 vivado -source rebuild.tcl Note that the rebuild.tcl script shows you the files that need to be saved in source control in comments. This is in the file: # 3. The following remote source files that were added to the original project:- # # \"/home/jallen/example_fpga/ip/clk_wiz_0/clk_wiz_0.xci\" # \"/home/jallen/example_fpga/rtl/testtop.v\" # \"/home/jallen/example_fpga/cons/mycons.xdc\" You will have big problems if any of these are in the project directory (example_fpga/project_1 in this case). It does not work to delete the project_1/ directory, and sneakily write the files back. First the rebuild.tcl script will fail in the line with create_project because the directory already exists. You can try to get around this by adding -force the line with create_project. Unfortunately, create_project -force deletes the entire directory, so then Vivado will complain that the files are missing. You really need to create the source files outside of the project directory in the first place. Xilinx IP The next difficulty is that Xilinx IP from the \"IP Catalog\" is written by default to the project directory. An example is the clock wizard IP to use a PLL or MMCM. Take note of the \"IP Location\" in the top left of the window. It should just show you the location, but the GUI design is bad here so have to click on it. When you click on it, you will see that it wants to put it in the project: Instead put it in the ip/ directory. You need to generete the output products, even though they do not have to be saved in git. When you generate them here, then Vivado knows to regenerate them when you rebuild the project. Just the .xci file needs to be saved in source control, but it's a good idea to run the write_project_tcl command and check the comments to be sure. Unfortunately the output products are generated in the same tree as the .xci files, so you have to pay close attention to the ip/ directory. You should know that there is a setting to override the default \"IP Location\". It's here: Seems good right? But it isn't. The problem is that this is a system-wide setting, not a per-project setting. This default does not end up in the project tcl file, and if you change it, it will apply to all of your projects. You could end up building IP from one project in another project's IP directory. I found that this setting is stored here: ~/.Xilinx find . -type f | xargs grep newip ./Vivado/2019.1/vivado.xml: <recent index=\"0\" path=\"/home/jallen/quicktest1/newip\"/> ./Vivado/2019.1/vivado.xml: <CUSTOMIZED_IP_DEFAULT_LOCATION value=\"/home/jallen/quicktest1/newip\"/> My recommendation for this setting is to change the path to something you don't have permission to write to, perhaps \"/root\". This way, if you attempt to save IP to the default location, it will fail and inform you. IP Integrator / Block design Block designs must also be created outside of the project directory (for example, in our ip/ directory). This is odd, because the block design ends up as a set of commands in the project tcl script produced by write_project_tcl. The problem is that the HDL wrapper file is not produced by the project tcl, but must exist for this script to work without failing. When block designs are produced in ip/, many files are generated, but only the wrapper file has to be checked into the source control. This file is in the list in the comments of the project tcl script: # 3. The following remote source files that were added to the original project:- # # \"/home/jallen/tryit/ip/design_1/hdl/design_1_wrapper.v\" # \"/home/jallen/tryit/cons/mycons.xdc\" Anyway, when you create a block design, the default is for it to be produced inside the project: Change this to ip/: Now we create the block design: Populate the block design canvas: Right click on the block design and create the HDL wrapper: That's it. Now you have the files necessary for checking into source control so you can use the write_project_tcl command. Xilinx SDK / Eclipse Review XSDK allows you to develop software for the system you create on the FPGA. Let's review a little about how XSDK works. First thing you must do is export the hardware .hdf file from Vivado: As usual, Vivado will want to put it in the project: You should save it somewhere else, perhaps at the top level since this is the one file that the software team will care about: The .hdf file is a .zip file containing the list of peripherals in your design, the address map and possibly the .bit file- basically everything the software needs to know about the hardware: ~/quicktest1 unzip -v design_2_wrapper.hdf Archive: design_2_wrapper.hdf Length Method Size Cmpr Date Time CRC-32 Name -------- ------ ------- ---- ---------- ----- -------- ---- 620 Defl:N 353 43% 2019-11-18 16:34 619e2f0a sysdef.xml 261182 Defl:S 24932 91% 2019-11-18 16:34 0959ea2b design_1.hwh 15855 Defl:S 4021 75% 2019-11-18 16:34 00750531 design_1_bd.tcl 1241916 Defl:S 58412 95% 2019-11-18 16:34 de68834d design_1_wrapper.bit 1436 Defl:S 629 56% 2019-11-18 16:34 014b194a design_1_wrapper.mmi -------- ------- --- ------- 1521009 88347 94% 5 files Now we start XSDK, either through Vivado: Of course, it assumes you want the files in the project: You should put the workspace directory (where XSDK will put the software projects you create) outside of the Vivado project. The \"Exported Location\" is the directory where the .hdf file was placed: Alternatively, you can start XSDK from the command line: xsdk -workspace sw -hwspec design_1_wrapper.hdf XSDK starts, and automatically runs a sequence to create a hardware wrapper project from the .hdf file: You finally end up with one project in the workspace, the hardware wrapper project: You then may create an application project based on a template: You can select the OS: standalone, linux or freertos. We pick standalone: And you select one of the template projects: XSDK creates the application project and a BSP project for it. The BSP (Board Support Package) project has Xilinx provided source code for the peripherals that are included in the hardware. You end up with three projects: The application project (\"fred\" above) has your code. It is linked with a library produced from the BSP project. The BSP project in turn depends on the hardware wrapper project which was created based on the .hdf file. Source control for XSDK Here is one way to structure your Xilinx SDK project so that it compatible with version control. The goal here is to check in the minimum number of files so that an XSDK software project can be recreated in a new repository. Only files that we create should be checked in, not derived files. We want the project to work through the XSDK Eclipse GUI to enhance the convenience of certain tasks: XSDK GUI allows you to casually create new software projects. For example you may need to create the Xilinx Zynq memory test project when your board comes in to validate the DRAM or you may want to create a standalone project instead of full Linux for board bringup tasks. XSDK GUI allows you to connect to the target and debug without using any other tools. On the other hand, for larger software projects and Linux you will almost certainly want to use scripting. You should include in your Linux build script the steps needed to create the device tree and the FSBL (first stage bootloader) from the .hdf file. Here is a quick summary of what we are going to do: Check in only the application project source code plus the Eclipse project files for it. Leave out the BSP project and hardware wrapper project. On a fresh clone, you need to rebuild the BSP project that the application project references. Mainly this means that you have to remember to use the name it expects (usually \"fred_bsp\" for an application called \"fred\"). Alternatively, you could include the BSP project in the repository. You may want this if you customize it in any way. In this case, you will have to import both the BSP and the application project. Assuming you do not put the BSP in the respository, the directory structure will look like this: quicktest1/ rebuild.tcl - TCL script created by Vivado. Checked in. rtl/ - Your Verilog (or VHDL) source code. All checked in. cons/ - Your constraint files. All checked in. project_1/ - Vivado project. Nothing here is checked in. ip/ - Xilinx IP. Some files checked in. design_1_wrapper.hdf - The exported hardware. sw/ - Becomes the XSDK / Eclipse workspace sw/fred/ - The application project sw/fred/src/ - Source code for the application project. All checked in. sw/fred/.project - Eclipse project file. Checked in. sw/fred/.cproject - Eclipse project file. Checked in. sw/fred/Debug/ - Application binary. Not checked in. sw/design_1_wrapper_hw_platform_0 - Hardware wrapper project derived from .hdf file. Not checked in. sw/fred_bsp/ - BSP project derived from wrapper. Not checked in. sw/.metadata - Eclipse workspace crap. Not checked in. It is important to understand some issues with XSDK: When you start it with the -hwspec option (as it is when you \"Launch SDK\" from Vivado), there is a very high chance that it will import the hdf as a new design wrapper project instead of updating your existing one. But sometimes it does what you want, and just updates the existing wrapper project- it works correctly if you leave XSDK running when you overwrite the .hdf file with Vivado, or even if XSDK is not running but there are no path changes. It certainly will not work if you had the wrapper project checked in and you start XSDK after a fresh clone. Bottom line is that it is pointless to check in the wrapper project. Then if you do end up with multiple design wrapper projects, it will be unclear which one is being referenced by the BSP project. The \"system.mss\" within the BSP shows it, but will you remember to look? Chances are high that you will compile the code with the old hardware. Related things are broken. For example, you can right-click on an applicaiton project for \"Change Referenced BSP\", but it's broken- the window comes up blank. This implies that you do not want to end up with multiple BSPs. Anyway, you should only have a single hardware wrapper project and a single BSP in your workspace to keep things clear. If you do end up with multiple wrapper projects, you should delete the ones you don't want by selected them and hitting the Delete key. Then review the inter-project references by right-clicking on the BSP project, click Properties and click on Project References: Check the correct one. Then clean and rebuild all. Note that even this window is broken- none of the wrappers were checked to begin with. Rebuild steps Luckily, the application project references the BSP project with a relative path, so you can move the application project as long as the BSP project is created in the same relative position. Also, Eclipse allows you to import projects which are already physically in the workspace. So it works for Eclipse to start a new workspace with your application source code already there. Suppose we have a repository structured as above. After a fresh clone, you should follow these steps: git clone https://github.com/jhallen/quicktest1.git cd quicktest1 xsdk -workspace sw -hwspec design_1_wrapper.hdf When it launches, you will only have the hardware wrapper project (no fred_bsp and no fred even though the fred/ directory is already in the workspace directory): Create the BSP: Set the name to what the application project expects: Select the same BSP options. If any of these are selected, you are better off checking in the BSP. Now we have the BSP project recreated: Next we import the application project. It's already in the workspace directory, but XSDK doesn't know about it yet. Select the current workspace directory to search for projects: Select your application project (\"fred\" in this case) that was checked out with git: Now we have all three required projects: From here you can rebuild the application. ",
        "Use fusesoc. <a href=\"https://github.com/olofk/fusesoc\" rel=\"nofollow\">https://github.com/olofk/fusesoc</a><p>Use your own editor and source control tools outside of Xilinx's 1990s straightjacket. It creates Vivado projects and invokes it to do synthesis.  You can open the generated projects in Vivado if you really need their GUI.",
        "FPGA Pro here.  I checked out the README.md to see if I could pick up any tips.  It is a good guide for a first time through, but I recommend also reviewing the Xilix documentation on this.<p>There's Xilinx App Note 1165 [Circa 2013] which is getting long in the tooth but still valid:\n<a href=\"https://www.xilinx.com/support/documentation/application_notes/xapp1165.pdf\" rel=\"nofollow\">https://www.xilinx.com/support/documentation/application_not...</a><p>And, Chapter 5 in Xilinx User Guide 892 is \"Source Management and Revision Control Recommendations\"\n<a href=\"https://www.xilinx.com/support/documentation/sw_manuals/xilinx2019_1/ug892-vivado-design-flows-overview.pdf\" rel=\"nofollow\">https://www.xilinx.com/support/documentation/sw_manuals/xili...</a><p>There is also a .gitignore example which can be helpful but is not geared towards a minimal file set without alot of tweaking:\n<a href=\"https://www.xilinx.com/support/answers/61232.html\" rel=\"nofollow\">https://www.xilinx.com/support/answers/61232.html</a><p>A few words of warning here:\nThe documentation recommends using the write_project_tcl and write_bd_tcl scripts.  I have experienced problems with both of these not faithfully recreating the .xpr and .bd files so exercise caution with them.  A better approach is to avoid .xpr files and to use a non-project or scripted flow.  If you have to use a Vivado project for some reason (I can think of a couple) then create and maintain tcl script to generate the project by hand.  One can use the write_project_tcl to get started and then update it by copying the tcl generated by Vivado after each GUI operation out of the Vivado tcl console into the project generation script when making changes to the project one wants to keep.<p>I have had the most problems with write_bd_tcl so I am now experimenting with just checking in the .bd file and setting the .bd extension to \"binary\" and various merge strategies in the .gitattributes file after several projects worth of frustration with the write_xx_tcl nonsense.<p>Finally, take all other Xilinx recommendation of source files to check in with a grain of salt.  The documentation recommends checking in way too much.  I recommend sticking with the \"Minimum Set of Source Files to Manage\" with archival backups of all output products for critical tags (eg. releases) somewhere outside the VCS."
      ],
      "relevant": "false"
    }
  ]
}
